Jython NEWS

31-dec-2001 Jython 2.1 final

  Bug fixes.
   - [ #493359 ] Installer should include <EXIT> button
   - [ #495602 ] os.path.dirname() can result in an NPE
   - [ #495604 ] imp.find_module fails when None is 2 arg

21-dec-2001 Jython 2.1 beta 2

  New features.
   - support for callproc() in zxJDBC is now available for most simple
     stored procedure calls.

  Bug fixes.
   - [ #451552 ] case insensitivity on import causes prob
   - [ #456926 ] PackageManager doesn't work correctly
   - [ #484949 ] __import__(_) does unwanted rel search
   - [ #488632 ] -c sys.argv diff
   - [ #489168 ] Parse error, java traceback
   - [ #489836 ] Private names is not mangled
   - [ #490157 ] string.splitlines() - incorrectly splits
   - [ #490230 ] NotImplemented not implemented
   - [ #490961 ] PyFile.java requires JDK 1.2
   - [ #490962 ] Typo in PyFile.java
   - [ #490963 ] Please update ReadlineConsole.java
   - [ #494514 ] Python object not gc()'d
   - [ #495458 ] multi level import from .zip file.
   - [ #495870 ] zxJDBC now only prepares statements with params.

03-dec-2001 Jython 2.1 beta 1

  New features.
   - The weakref module is now available.
   - The sys.exitfunc hook is called on exit and the sys.excepthook
     is called when an exception occur.
   - A CPython compatible xreadlines module.
   - Support for os.environ and os.system() on common platforms.
   - Includes zxJDBC for Python DB API 2.0 compatibility.

  Bug fixes.
   - [ #438297 ] SimpleHTTPServer does not work
   - [ #440660 ] using nested java cls @ level >2 fails
   - [ #448485 ] Tuple unpacking raises KeyError
   - [ #448523 ] Support "ASCII" as builtin codec.
   - [ #449316 ] ArrayList()[0] should raise IndexError
   - [ #449956 ] jythonc 2.1a3 --package problem
   - [ #450938 ] time module requires JDK 1.4
   - [ #451746 ] jythonc --deep pjy$packages problem
   - [ #452526 ] traceback lineno is the except line
   - [ #452947 ] Class of innerclass inst <> innerclas
   - [ #453301 ] jythonc --compileropts on Windows
   - [ #457614 ] pls change &copyright; to (c) in sources
   - [ #458945 ] Missing 'lastindex' on match objects
   - [ #462280 ] builtin method as a class variable
   - [ #467826 ] SHA digest() method doesn't work
   - [ #473676 ] cStringIO bug
   - [ #475445 ] incompatibility with python
   - [ #475666 ] __nonzero__ exceptions must be ignored
   - [ #476580 ] 'del obj.non_member' : wrong exception
   - [ #476772 ] shutdowns in jython / atexit
   - [ #477608 ] os.path.getmtime() missing
   - [ #477768 ] ord([123]) 21a3
   - [ #477793 ] os.utime() is missing.
   - [ #480373 ] Can't find _PyInner with classloader.
   - [ #480390 ] main() does not throw exceptions
   - [ #484181 ] command line args in dos
   - [ #485558 ] Synchronization bug in sys.initialize.
   - [ #485968 ] cStringIO.softspace is not assignable.

29-jul-2001 Jython 2.1 alpha 3

  New features.
   - A settable console encoding will allow windows users to enter
     national characters at the command prompt.
   - Non-public classes are available when respectJavaAccessibility is false
   - The names of zip- and jarfiles can be added to sys.path.

  Bug fixes.
   - The standard python library files are from CPython-2.1.1
   - A complete list of fixed bugs can be found on SF:
        http://sourceforge.net/tracker/?group_id=12867&atid=112867
     Select Status=Any and Group=Fixed in 2.1a3

18-jul-2001 Jython 2.1 alpha 2

  New features.
   - Added ReadlineConsole class. This class will make it a lot easier
     to integrate Bablok's readline support.
   - Display Hook for Interactive Use (pep-0217)
   - Added zlib, gzip and zipfile modules.
   - Added nested scope to jythonc (pep-0227).

  Bug fixes.
   - Fixed obscure __import__ error message #437800
   - Prevent a NPE during import when running with a security manager
   - Fixed multi-level Java method overriding #222819.
   - Fix for dependency problem with jythonc. #415933
   - Fix a lost syntax error when auto importing submodules.
   - Use quotes around classpath, but only for win+jdk1.1.
   - Find the complete list of fixed bug on SF:
        http://sourceforge.net/tracker/?group_id=12867&atid=112867
     Select Status=Any and Group=Fixed in 2.1a2


14-mar-2001 Jython 2.1 alpha 1

  New features.
   - Improve speed when indexing a string and iterating over a string
     in a for loop.
   - Reworked coercing model (pep-0208)
   - Added {}.popitem().
   - Improved speed for python files by buffering the RandomAccessFile.
   - Added function attributes (pep-0232)
   - Rich comparison (pep-0207)
   - Updated cPickle to handle CPython compatible unicode strings.
   - Updated sre to CPython-2.1a1
   - Added the "new" module
   - Added a PyServlet class to the util package.
   - Warning framework (pep-0230).
   - Added sys.add_classdir and sys.add_extdir.
   - Added nested scope to the interpreter (pep-0227).

  Bug fixes.
   - Allow self referencing adapters to be collected when using weak
     tables.
   - Added workaround for a reader bug in MRJ22Jitc.01.
   - Fixes #127340 where serializable parameter received a PyObject
     instead of the wrapped java object.
   - Include a LineNumberTable in the compiled class files.
   - Fixed a java version test bug in the installer.
   - Added workaround for class initialization bug in MRJ2.2.4
   - Added support for three argument getattr() calls.

17-Jan-2001 Jython 2.0 final release

  Bug fixes.
   - Install the correct image for the local documention.
   - Added os.linesep field.

15-Jan-2001 Jython 2.0 release candidate 1

  New features
   - Experimental support for reloading java packages. Thanks to
     Samuele Pedroni for all his work on the Jython/Java integration.

  Bug fixes.
   - Prevent a NPE when a .jar on the classpath is corrupt. Instead
     a message with the original IOException is printed.

10-Jan-2001 Jython 2.0 beta 2

  New features
   - Added socket.getfqdn(). Thanks to Brian Zimmer for the patch.

  Bug fixes.
   - Fixed innerclass names with '$' #127200
   - Fixed a bug where final methods were overriden in proxy #127201.
   - Fixed a bug in exec which allow a fileobject to be passed in.
     Thanks to Brian Zimmer for the patch.

31-Dec-2000 Jython 2.0 beta 1

  New features
    - Installer logo by Ivan Kougaenko. The logo content is still
      open, so submit you suggestions.
    - The default packages selected in the installer are now better
      attuned to the normal user (as opposed to the jython devers).

  Bug fixes.
    - Fixed a NPE when a class is defined in non-module namespace.
    - Fixed a compilation problem when using JDK1.2.x
    - The installer now creates a useable Uninstall.class.

25-Dec-2000 Jython 2.0 alpha 3

  Bug fixes.
    - Fixed a bug that caused Infinite recursion in subpackage
      import
    - Fixed conversion error when a long is converted to a java double.
    - Fixed a bug where an attribute in a package __init__.py would
      hide a submodule.
    - Fixed missing quotes around the path to java.exe in jython.bat
      for windows.
    - Include missing re.py in installer.
    - Added threading and atexit modules from CPython2.0.

17-Dec-2000 Jython 2.0 alpha 2

  New features.
    - Added -v (verbose) option to jython command. It will trace
      import statements. Use three -v's for maximum information.
    - Added new registry option python.options.internalTablesImpl
      which is a list of choices (':' separated) for internal
      tables implementations. These tables contain the mapping of
      classes to PyJavaClasses.
      Long running applications that unloads classes can avoid a
      memory leak by setting the property to "weak" or "soft".
      That will use a table implementation which use weak or soft
      refrences.
    - Use a SecureClassLoader for loading compiled python modules.
      This should allow jython to be used with the java plugin and
      its fine grained security.

  CPython-2.0 compatibility
    - Added support for formatting of long values in "%d %x %X %o".
      The support does not match CPython2.0 exactly, but matches
      what CPython2.1 will do.
    - The \x escape will only eat two hex characters and will
      always create a character with values < 256. Use the \u
      escape for high-byte values.
    - A ucnhash module to support the \n{name} escape.

  Backward incompatibility:
    - The python.path property is appended to sys.path instead of
      being inserted at position 1 in sys.path.

  Bug fixes.
    - Package relative import works in jythonc, at least when the dotted
      package name match the directory structure.
    - Fixed oct(0) to return "0"
    - Added a os.__file__ attribute. CPython's site.py expects that.
    - Fixed a exception when calling int("0", 16)
    - Delay closing a socket until all sock.makefile() files are closed.
    - Avoided a duplicate call to Class.getMethods(). This will improve
      performance.
    - Allow from import * to modify the locals in a function (bug 122834).
    - Classes with the same name do no longer clash (bug 122820).
    - Avoid a memory leak where many threads get started and stopped. The
      fix only works on java2.

26-Nov-2000 Jython 2.0 alpha 1

  New features.
    - Integrate the free ORO regular expression matcher from the apache
      project.

  CPython2.0 compatibility, including
    - List comprehension.
    - Extended call syntax.
    - Extended print statement
    - Augmented assignment.
    - Unicode support libraries and codecs.
    - sre unicode regular expression.

  Some backward incompatibility is introduced:
    - The user configuration file is now called <user.home>/.jython
    - Text files will pass data read and written through the default
      codecs for the JVM. Binary files will write only the lower eight
      bits of each unicode character.
    - arrays passed to java code will no longer autocoerce just
      because the elements can be autocoerced.
    - The precedence of java loading have changed. Now the sys.path
      is searched for python modules before the CLASSPATH and sys.path
      is searched for java class and java packages.
    - The builtin exceptions are always classbased. -X is disable.
      User exception can still be strings.

  Bug fixes.
    - Many, including the errata.
    - Now the content of a java package is the union of the content of all
      locations with the corresponding valid hierarchical name
      from dirs and jars of CLASSPATH (and sys.path for dirs); i.e.
      from jpkg import * works for jpkg in a dir too.

  Improved CPython 2.0 compatibility
    - codecs module
    - sha module.

26-Jan-2000 JPython 1.1 final released

  - Only one small CPython compatibility patch to os.mkdir() and
    os.makedirs() -- optional `mode' argument, which is ignored.

21-Jan-2000 JPython 1.1 release candidate 1 released

  New JPython features and bug fixes
    - Race conditions when creating multiple PythonInterpreter objects
      in an embedded multithreaded Java application have been fixed.
    - Recursive print of a module's namespace no longer overflows the
      JVM stack.
    - Fixed backslashing of quotes inside triple quoted strings (Finn
      Bock).
    - Fixes to read(int) method on file objects, which used to return
      the empty string before EOF was seen.
    - Class-based exceptions are used in frozen (jpythonc) modules.
    - Duplicate argument names in a function definition raise the
      appropriate SyntaxError.
    - os.path.getsize() has been added.
    - mutability of tuples under some situations has been fixed.
    - dictionary insertion order affecting dictionary equality has
      been fixed (Finn Bock).
    - Using the --package option with jpythonc has been fixed.

  Improved CPython 1.5.2 compatibility
    - optional sizehint argument implemented for readlines() method on
      file objects.
    - Better compatibility in %g formatting of floats.
    - sys.stdout.softspace is now writeable.
    - re.VERBOSE/re.X flags are implemented.
    - traceback object's reprs are CPython conformant.
    - In module os, os.error is equivalent to the builtin OSError.
      Also, listdir(), mkdir(), makedirs(), remove(), rename(), and
      rmdir() raise OSError directly.
    - os.stat() raises an OSError if the file is missing.

28-Oct-1999 JPython 1.1beta4 released

  New JPython features and bug fixes
    - fixed a bug related to loading anonymous inner classes (PR#201).
      This is an experimental patch.  See registry file for entry
      python.options.extendedClassLoader
    - fixed Java exceptions when calling apply() with a bogus 3rd
      argument (PR#208)
    - fixed a 1.1beta3 problem with method objects having their
      im_self mysteriously changed out from under them (PR#186).
    - fixed problems with Python classes being deeply derived from
      Java classes and interfaces (PR#178, PR#195).
    - Improved memory footprint when using exec().
    - Dead threads are now reaped from thread state cache (Drew
      Morrissey).
    - Tuples, dictionaries, and strings now use fast method lookup
      mechanism.

  Improved CPython 1.5.2 compatibility
    - md5 module supported (no need to download anything extra)
    - dir() on function objects now returns a list containing __doc__,
      func_doc, __namme__, func_name, func_globals, func_defaults,
      func_code.  __doc__/func_doc is writable (but not func_defaults
      and func_code, which are writable in CPython). (PR#192)
    - dir() on code objects returns a list containing co_name,
      co_argcount, co_varnames, co_filename, co_firstlineno, co_flags.
      Not supported: co_nlocals, co_code, co_consts, co_names,
      co_lnotab, co_stacksize.  All attributes are read-only.
    - dir() on method objects returns a list containing im_self,
      im_func, im_class, __doc__, __name__.  These attributes are
      read-only.

22-Sep-1999 JPython 1.1beta3 released

  New JPython features and bug fixes

    - JPython can now optionally access non-public members of Java
      classes.  By setting the registry entry
      python.security.respectJavaAccessibility=false, JPython can
      access private, package-private, and protected fields, methods,
      and constructors.  By default, normal Java access rules are
      followed, i.e. only public members can be accessed.  This
      feature only works if running with Java 1.2.  Thanks to Tony
      Plate for his initial implementation.
    - A new framework for looking up the methods for builtin types has
      been enabled.  This can speed up method calls by a factor of 2.
      The feature is currently experimental and has only been
      implemented for list objects, but will be implemented for other
      builtin objects for the next release.
    - Some workarounds for weird JIT bugs have been added, but this
      may not fix all problems related to running JPython under JVMs
      with JIT enabled.
    - A wrapper for a free md5 builtin module is included, although
      the md5 implementation is not.  See the comment in
      org/python/modules/MD5Module.java for details.
    - New semantics for registry key python.modules.builtin (and
      correspondingly the org/python/modules/Setup.java file).

  Improved CPython 1.5.2 compatibility

    - sys.modules['__builtin__'] and "import __builtin__" has been
      fixed.
    - Builtin methods and functions now have the standard __name__,
      __doc__, __self__, and __members__ attributes.
    - Dictionaries and lists now have a __methods__ attribute, and
      dir({}) or dir([]) return the list of members.
    - repr(8to16bitstring) now prints standard octal escapes for 8bit
      characters.  It still prints hex escapes for 16bit characters.
    - Added abspath() to os.path (i.e. javapath)
    - Code objects now have a co_flags attribute
    - Frame objects now have f_trace attribute, and dir(frame) works
    - None() now raises a TypeError
    - tuple(somelist) immutability patch
    - re match objects now have groupdict() method
    - Finn Bock patch for setting of a module's __name__ after reload

16-Jun-1999 JPython 1.1beta2 released

    - Updates and bug fixes to jpythonc tool.  New registry entries
      python.jpythonc.compiler, python.jpythonc.classpath, and
      python.jpythonc.compileropts.  getopt style long/short option
      names (old options are deprecated).  New -J/--compileropts
      option.
    - syncing string object methods with experimental CPython 1.6
      string methods.  This includes new optional arguments on
      startswith() and endswith() and the moving of join() to a method
      of the separator string.
    - Many other bug fixes and CPython syncs

04-Jun-1999 JPython 1.1beta1 released

  Highlights of changes since JPython 1.0.3

    - New and improved jpythonc tool by Jim Hugunin
    - New modules contributed by Finn Bock: cStringIO, cPickle,
      struct, binascii
    - New module synchronize, equivalent to Java's synchronized
      keyword
    - Operator module now complete
    - sys.add_package() no longer necessary, "import java.lang" just works
    - Class-based standard exceptions (w/ support for -X option)
    - super__ methods are deprecated, use regular Python style
    - time.strftime() added
    - Java 1.2 style collections support
    - Multiple interpreter states
    - Most CPython 1.5.2 features have been implemented
    - String objects now have methods -- expected CPython 1.6 feature
    - Improved performance
    - Java inner class support
    - keywords are allowed in some locations (e.g. as attribute names)
    - New license
    - bug fixes




Local Variables:
mode: indented-text
indent-tabs-mode: nil
End:
