#--------------------------------------------------------------------------------------------#
#  S T O L E N   F R O M   A U T O M A K E                                                   #
#--------------------------------------------------------------------------------------------#

@SET_MAKE@

srcdir = @srcdir@
top_srcdir = @top_srcdir@
VPATH = @srcdir@
pkgdatadir = $(datadir)/@PACKAGE@
pkglibdir = $(libdir)/@PACKAGE@
pkgincludedir = $(includedir)/@PACKAGE@
top_builddir = ../../../../..

am__cd = CDPATH="$${ZSH_VERSION+.}$(PATH_SEPARATOR)" && cd
INSTALL = @INSTALL@
install_sh_DATA = $(install_sh) -c -m 644
install_sh_PROGRAM = $(install_sh) -c
install_sh_SCRIPT = $(install_sh) -c
INSTALL_HEADER = $(INSTALL_DATA)
transform = $(program_transform_name)
NORMAL_INSTALL = :
PRE_INSTALL = :
POST_INSTALL = :
NORMAL_UNINSTALL = :
PRE_UNINSTALL = :
POST_UNINSTALL = :
build_triplet = @build@
host_triplet = @host@
ACLOCAL = @ACLOCAL@
AMDEP_FALSE = @AMDEP_FALSE@
AMDEP_TRUE = @AMDEP_TRUE@
AMTAR = @AMTAR@
AR = @AR@
AUTOCONF = @AUTOCONF@
AUTOHEADER = @AUTOHEADER@
AUTOMAKE = @AUTOMAKE@
AWK = @AWK@
BASH = @BASH@
BUILD_LEGACY_PLUGINS_FALSE = @BUILD_LEGACY_PLUGINS_FALSE@
BUILD_LEGACY_PLUGINS_TRUE = @BUILD_LEGACY_PLUGINS_TRUE@
BUILD_MODE = @BUILD_MODE@
BUILD_NAME = @BUILD_NAME@
BUILD_TOOLSET = @BUILD_TOOLSET@
CC = @CC@
CCDEPMODE = @CCDEPMODE@
CFLAGS = @CFLAGS@
CHECKBOT = @CHECKBOT@
CHMOD = @CHMOD@
CHOWN = @CHOWN@
CLIENT_JAVA_RUNTIME = @CLIENT_JAVA_RUNTIME@
CPPFLAGS = @CPPFLAGS@
CRYPTO_APP_DIR = @CRYPTO_APP_DIR@
CUSTOMER = @CUSTOMER@
CUSTOMER_PROFILE = @CUSTOMER_PROFILE@
CVS = @CVS@
CXX = @CXX@
CXXCPP = @CXXCPP@
CXXDEPMODE = @CXXDEPMODE@
CXXFLAGS = @CXXFLAGS@
CYGPATH_W = @CYGPATH_W@
DEFS = @DEFS@
DEPDIR = @DEPDIR@
DF = @DF@
DIFF = @DIFF@
ECHO_C = @ECHO_C@
ECHO_N = @ECHO_N@
ECHO_T = @ECHO_T@
EGREP = @EGREP@
ENV = @ENV@
EXEEXT = @EXEEXT@
EXTRA_DEBUG_SUBDIRS = @EXTRA_DEBUG_SUBDIRS@
FOUNDATION_FALSE = @FOUNDATION_FALSE@
FOUNDATION_TRUE = @FOUNDATION_TRUE@
GIMP = @GIMP@
GLUEGEN_JAR = @GLUEGEN_JAR@
GREP = @GREP@
HAS_MAC_FALSE = @HAS_MAC_FALSE@
HAS_MAC_TRUE = @HAS_MAC_TRUE@
HAS_WINDOWS_FALSE = @HAS_WINDOWS_FALSE@
HAS_WINDOWS_TRUE = @HAS_WINDOWS_TRUE@
HOMEDIR = @HOMEDIR@
ID = @ID@
INSTALL_DATA = @INSTALL_DATA@
INSTALL_PROGRAM = @INSTALL_PROGRAM@
INSTALL_SCRIPT = @INSTALL_SCRIPT@
INSTALL_STRIP_PROGRAM = @INSTALL_STRIP_PROGRAM@
IS_MAC_OS_FALSE = @IS_MAC_OS_FALSE@
IS_MAC_OS_TRUE = @IS_MAC_OS_TRUE@
IS_UNIX_FALSE = @IS_UNIX_FALSE@
IS_UNIX_NATIVE_ONLY_FALSE = @IS_UNIX_NATIVE_ONLY_FALSE@
IS_UNIX_NATIVE_ONLY_TRUE = @IS_UNIX_NATIVE_ONLY_TRUE@
IS_UNIX_TRUE = @IS_UNIX_TRUE@
IS_UnivBin_FALSE = @IS_UnivBin_FALSE@
IS_UnivBin_TRUE = @IS_UnivBin_TRUE@
IS_WINDOWS_FALSE = @IS_WINDOWS_FALSE@
IS_WINDOWS_TRUE = @IS_WINDOWS_TRUE@
IS_x86_64_FALSE = @IS_x86_64_FALSE@
IS_x86_64_TRUE = @IS_x86_64_TRUE@
IS_x86_FALSE = @IS_x86_FALSE@
IS_x86_TRUE = @IS_x86_TRUE@
JAR = @JAR@
JAVA = @JAVA@
JAVADOC = @JAVADOC@
JAVA_BUILD_TYPE = @JAVA_BUILD_TYPE@
JAVA_C = @JAVA_C@
JAVA_CC = @JAVA_CC@
JAVA_CLASS_VERSION = @JAVA_CLASS_VERSION@
JAVA_C_FLAGS = @JAVA_C_FLAGS@
JAVA_C_NODEP_FLAGS = @JAVA_C_NODEP_FLAGS@
JAVA_H = @JAVA_H@
JAVA_HOME = @JAVA_HOME@
JAVA_INC = @JAVA_INC@
JAVA_NAME = @JAVA_NAME@
JAVA_OSARCH_TYPE = @JAVA_OSARCH_TYPE@
JAVA_RUNTIME = @JAVA_RUNTIME@
JAVA_RUNTIME_OPTS = @JAVA_RUNTIME_OPTS@
JAVA_VENDOR = @JAVA_VENDOR@
JAVA_VERSION = @JAVA_VERSION@
JNI_INCLUDES = @JNI_INCLUDES@
JNI_LDADD = @JNI_LDADD@
JNI_LDFLAGS = @JNI_LDFLAGS@
JOGL_JAR = @JOGL_JAR@
JOGL_LIBRARY_PATH = @JOGL_LIBRARY_PATH@
JYTHON_DIR = @JYTHON_DIR@
JYTHON_JAR = @JYTHON_JAR@
KILL = @KILL@
LDFLAGS = @LDFLAGS@
LIBOBJS = @LIBOBJS@
LIBS = @LIBS@
LICENSE_DOC = @LICENSE_DOC@
LICENSE_END = @LICENSE_END@
LICENSE_END_STAMP = @LICENSE_END_STAMP@
LICENSE_START_STAMP = @LICENSE_START_STAMP@
LICENSE_TYPE = @LICENSE_TYPE@
LTLIBOBJS = @LTLIBOBJS@
MAC_HOMEDIR = @MAC_HOMEDIR@
MAC_JAVA_RUNTIME = @MAC_JAVA_RUNTIME@
MAC_PRODDIR = @MAC_PRODDIR@
MAC_ROOT_INST_DIR = @MAC_ROOT_INST_DIR@
MAC_ROOT_INST_PARENT_DIR = @MAC_ROOT_INST_PARENT_DIR@
MAC_TEMPDIR = @MAC_TEMPDIR@
MAKE = @MAKE@
MAKEINFO = @MAKEINFO@
NATIVE_ARCHTYPE = @NATIVE_ARCHTYPE@
NATIVE_HOMEDIR = @NATIVE_HOMEDIR@
NATIVE_OSTYPE = @NATIVE_OSTYPE@
NODEDIR = @NODEDIR@
OBJEXT = @OBJEXT@
PACKAGE = @PACKAGE@
PACKAGE_BUGREPORT = @PACKAGE_BUGREPORT@
PACKAGE_NAME = @PACKAGE_NAME@
PACKAGE_STRING = @PACKAGE_STRING@
PACKAGE_TARNAME = @PACKAGE_TARNAME@
PACKAGE_VERSION = @PACKAGE_VERSION@
PATH_SEPARATOR = @PATH_SEPARATOR@
PIPELINE_BUILDERDIR = @PIPELINE_BUILDERDIR@
PIPELINE_GID = @PIPELINE_GID@
PIPELINE_GROUP = @PIPELINE_GROUP@
PIPELINE_HOST_IDS = @PIPELINE_HOST_IDS@
PIPELINE_HOST_NAMES = @PIPELINE_HOST_NAMES@
PIPELINE_JAR = @PIPELINE_JAR@
PIPELINE_LATEST_JAR = @PIPELINE_LATEST_JAR@
PIPELINE_LIBDIR = @PIPELINE_LIBDIR@
PIPELINE_UID = @PIPELINE_UID@
PIPELINE_USER = @PIPELINE_USER@
PLCONFIG_VERSION = @PLCONFIG_VERSION@
PLFILEMGR_DEBUG_OPTS = @PLFILEMGR_DEBUG_OPTS@
PLFILEMGR_GC_OPTS = @PLFILEMGR_GC_OPTS@
PLFILEMGR_PROFILE_OPTS = @PLFILEMGR_PROFILE_OPTS@
PLJOBMGR_DEBUG_OPTS = @PLJOBMGR_DEBUG_OPTS@
PLJOBMGR_GC_OPTS = @PLJOBMGR_GC_OPTS@
PLJOBMGR_PROFILE_OPTS = @PLJOBMGR_PROFILE_OPTS@
PLJOBMGR_XMS = @PLJOBMGR_XMS@
PLJOBMGR_XMX = @PLJOBMGR_XMX@
PLJOBMGR_XRUNJDWP = @PLJOBMGR_XRUNJDWP@
PLMASTER_DEBUG_OPTS = @PLMASTER_DEBUG_OPTS@
PLMASTER_GC_OPTS = @PLMASTER_GC_OPTS@
PLMASTER_PROFILE_OPTS = @PLMASTER_PROFILE_OPTS@
PLPLUGINMGR_DEBUG_OPTS = @PLPLUGINMGR_DEBUG_OPTS@
PLPLUGINMGR_GC_OPTS = @PLPLUGINMGR_GC_OPTS@
PLPLUGINMGR_PROFILE_OPTS = @PLPLUGINMGR_PROFILE_OPTS@
PLPLUGIN_DEBUG_OPTS = @PLPLUGIN_DEBUG_OPTS@
PLPLUGIN_GC_OPTS = @PLPLUGIN_GC_OPTS@
PLPLUGIN_PROFILE_OPTS = @PLPLUGIN_PROFILE_OPTS@
PLQUEUEMGR_DEBUG_OPTS = @PLQUEUEMGR_DEBUG_OPTS@
PLQUEUEMGR_GC_OPTS = @PLQUEUEMGR_GC_OPTS@
PLQUEUEMGR_PROFILE_OPTS = @PLQUEUEMGR_PROFILE_OPTS@
PLSCRIPT_DEBUG_OPTS = @PLSCRIPT_DEBUG_OPTS@
PLSCRIPT_GC_OPTS = @PLSCRIPT_GC_OPTS@
PLSCRIPT_PROFILE_OPTS = @PLSCRIPT_PROFILE_OPTS@
PLTESTNATIVE_DEBUG_OPTS = @PLTESTNATIVE_DEBUG_OPTS@
PLTESTNATIVE_GC_OPTS = @PLTESTNATIVE_GC_OPTS@
PLUI_DEBUG_OPTS = @PLUI_DEBUG_OPTS@
PLUI_GC_OPTS = @PLUI_GC_OPTS@
PLUI_PROFILE_OPTS = @PLUI_PROFILE_OPTS@
PL_FILE_HEAP_SIZE = @PL_FILE_HEAP_SIZE@
PL_FILE_PORT = @PL_FILE_PORT@
PL_FILE_SERVER = @PL_FILE_SERVER@
PL_JOB_PORT = @PL_JOB_PORT@
PL_LOCAL_ALL_FALSE = @PL_LOCAL_ALL_FALSE@
PL_LOCAL_ALL_TRUE = @PL_LOCAL_ALL_TRUE@
PL_LOCAL_FALSE = @PL_LOCAL_FALSE@
PL_LOCAL_TRUE = @PL_LOCAL_TRUE@
PL_MASTER_HEAP_SIZE = @PL_MASTER_HEAP_SIZE@
PL_MASTER_PORT = @PL_MASTER_PORT@
PL_MASTER_SERVER = @PL_MASTER_SERVER@
PL_PLUGIN_PORT = @PL_PLUGIN_PORT@
PL_PLUGIN_SERVER = @PL_PLUGIN_SERVER@
PL_QUEUE_HEAP_SIZE = @PL_QUEUE_HEAP_SIZE@
PL_QUEUE_PORT = @PL_QUEUE_PORT@
PL_QUEUE_SERVER = @PL_QUEUE_SERVER@
PL_REMOTE_PORT = @PL_REMOTE_PORT@
PRODDIR = @PRODDIR@
PROFILE_STAMP = @PROFILE_STAMP@
QUEUEDIR = @QUEUEDIR@
RANLIB = @RANLIB@
RELEASE_STAMP = @RELEASE_STAMP@
ROOT_INST_DIR = @ROOT_INST_DIR@
ROOT_INST_PARENT_DIR = @ROOT_INST_PARENT_DIR@
RPM_DATE = @RPM_DATE@
RPM_ROOT = @RPM_ROOT@
SET_MAKE = @SET_MAKE@
SHELL = @SHELL@
SSH = @SSH@
STRIP = @STRIP@
TARGET_ARCHTYPE = @TARGET_ARCHTYPE@
TEMPDIR = @TEMPDIR@
UNIX_JAVA_HOME = @UNIX_JAVA_HOME@
VERSION = @VERSION@
WIN_APP_DATA_DIR = @WIN_APP_DATA_DIR@
WIN_APP_DATA_NEEDS_USER = @WIN_APP_DATA_NEEDS_USER@
WIN_HAS_APP_DATA_DIR = @WIN_HAS_APP_DATA_DIR@
WIN_JAVA_HOME = @WIN_JAVA_HOME@
WIN_JAVA_RUNTIME = @WIN_JAVA_RUNTIME@
WIN_PIPELINE_PASSWORD = @WIN_PIPELINE_PASSWORD@
WIN_PIPELINE_USERNAME = @WIN_PIPELINE_USERNAME@
WIN_PRODDIR = @WIN_PRODDIR@
WIN_ROOT_INST_DIR = @WIN_ROOT_INST_DIR@
WIN_ROOT_INST_PARENT_DIR = @WIN_ROOT_INST_PARENT_DIR@
WIN_SERVICE_VERSION = @WIN_SERVICE_VERSION@
WIN_TEMPDIR = @WIN_TEMPDIR@
WIN_USER_PROFILE_DIR = @WIN_USER_PROFILE_DIR@
WIN_USER_PROFILE_NEEDS_USER = @WIN_USER_PROFILE_NEEDS_USER@
XDIFF = @XDIFF@
ac_ct_CC = @ac_ct_CC@
ac_ct_CXX = @ac_ct_CXX@
am__fastdepCC_FALSE = @am__fastdepCC_FALSE@
am__fastdepCC_TRUE = @am__fastdepCC_TRUE@
am__fastdepCXX_FALSE = @am__fastdepCXX_FALSE@
am__fastdepCXX_TRUE = @am__fastdepCXX_TRUE@
am__include = @am__include@
am__leading_dot = @am__leading_dot@
am__quote = @am__quote@
am__tar = @am__tar@
am__untar = @am__untar@
bindir = @bindir@
build = @build@
build_alias = @build_alias@
build_cpu = @build_cpu@
build_os = @build_os@
build_vendor = @build_vendor@
datadir = @datadir@
datarootdir = @datarootdir@
docdir = @docdir@
dvidir = @dvidir@
exec_prefix = @exec_prefix@
host = @host@
host_alias = @host_alias@
host_cpu = @host_cpu@
host_os = @host_os@
host_vendor = @host_vendor@
htmldir = @htmldir@
includedir = @includedir@
infodir = @infodir@
install_sh = @install_sh@
libdir = @libdir@
libexecdir = @libexecdir@
localedir = @localedir@
localstatedir = @localstatedir@
mandir = @mandir@
mkdir_p = @mkdir_p@
oldincludedir = @oldincludedir@
pdfdir = @pdfdir@
prefix = @prefix@
program_transform_name = @program_transform_name@
psdir = @psdir@
sbindir = @sbindir@
sharedstatedir = @sharedstatedir@
sysconfdir = @sysconfdir@
target_alias = @target_alias@

DIST_COMMON = Makefile.in
subdir = src/java/us/temerity/pipeline
mkinstalldirs = $(SHELL) $(top_srcdir)/config/mkinstalldirs


#--------------------------------------------------------------------------------------------#
#   V A R I A B L E S                                                                        #
#--------------------------------------------------------------------------------------------#

         ALL_JAR = all.jar
         API_JAR = api.jar
           VAULT = vault


      JAVA_PATHS = -d ../../.. \
                   -classpath "../../..:$(srcdir)/../../..:$(srcdir)/../../../jogl/jogl.jar:$(srcdir)/../../../jython/jython.jar"


           ENUMS = CheckOutMode \
                   ExecutionMethod \
                   FileState \
                   LinkPolicy \
                   LinkRelationship \
                   LinkState \
                   OverallNodeState \
                   OverallQueueState \
                   OverflowPolicy \
                   PropertyState \
                   QueueState \
                   VersionState \
                   PosixSignal \
                   message/FileRequest \
                   message/MasterRequest \
                   ui/core/SelectionMode \
                   toolset/MergePolicy


    ENUM_SOURCES = $(patsubst %,$(srcdir)/%.java,$(ENUMS))


     API_SOURCES = $(shell ls $(srcdir)/*.java)

 BUILDER_SOURCES = $(shell ls $(srcdir)/stages/*.java) \
                   $(shell ls $(srcdir)/builder/*.java) \
                   $(shell ls $(srcdir)/builder/ui/*.java)

    GLUE_SOURCES = $(shell ls $(srcdir)/glue/*.java $(srcdir)/glue/io/*.java) 

     LAF_SOURCES = $(shell ls $(srcdir)/laf/*.java) 

    CORE_SOURCES = $(shell ls $(srcdir)/core/*.java) 

    EXTS_SOURCES = $(shell ls $(srcdir)/core/exts/*.java) 

    MATH_SOURCES = $(shell ls $(srcdir)/math/*.java) 

     MSG_SOURCES = $(shell ls $(srcdir)/message/*.java)

   PARAM_SOURCES = $(shell ls $(srcdir)/param/key/*.java)

PLG_UTIL_SOURCES = $(shell ls $(srcdir)/plugin/*.java)

   EVENT_SOURCES = $(shell ls $(srcdir)/event/*.java)

      TS_SOURCES = $(shell ls $(srcdir)/toolset/*.java)

      UI_SOURCES = $(shell ls $(srcdir)/ui/*.java) 

 UI_CORE_SOURCES = $(shell ls $(srcdir)/ui/core/*.java) 

    UTIL_SOURCES = $(shell ls $(srcdir)/utils/*.java) \
                   $(shell ls $(srcdir)/utils/v2_0_14/*.java)

    MOST_SOURCES = $(API_SOURCES) $(GLUE_SOURCES) $(LAF_SOURCES) \
                   $(TS_SOURCES) $(UTIL_SOURCES) $(PARAM_SOURCES) \
                   $(PLG_UTIL_SOURCES)

    CORE_PARSERS = BatchParser \
                   ToolsetEnvParser \
                   FileMgrOptsParser \
                   JobMgrOptsParser \
                   GraphicalOptsParser \
                   RemoteOptsParser \
                   MasterOptsParser \
                   PluginOptsParser \
                   PythonOptsParser \
                   PluginMgrOptsParser \
                   QueueMgrOptsParser \
                   ScriptOptsParser \
                   TestNativeOptsParser \
                   ValidateOptsParser \
                   GlueParser \
                   BuilderOptsParser


    GLUE_PARSERS = GlueParser


         JAVA_SOURCES = $(ENUM_SOURCES) $(filter-out $(ENUM_SOURCES),$(MOST_SOURCES)) \
                        $(patsubst %,glue/io/%.java,$(GLUE_PARSERS)) \
                        PackageInfo.java 

   JAVA_EVENT_SOURCES = $(filter-out $(ENUM_SOURCES),$(EVENT_SOURCES))

    JAVA_MATH_SOURCES = $(filter-out $(ENUM_SOURCES),$(MATH_SOURCES))

     JAVA_MSG_SOURCES = $(filter-out $(ENUM_SOURCES),$(MSG_SOURCES))

      JAVA_UI_SOURCES = $(filter-out $(ENUM_SOURCES),$(UI_SOURCES))

    JAVA_CORE_SOURCES = $(filter-out $(ENUM_SOURCES),$(CORE_SOURCES)) \
                        $(patsubst %,core/%.java,$(CORE_PARSERS)) \
                        $(EXTS_SOURCES)

 JAVA_UI_CORE_SOURCES = $(filter-out $(ENUM_SOURCES),$(UI_CORE_SOURCES)) \
                        ui/core/UserPrefs.java ui/core/JUserPrefsDialog.java

     JAVA_BLD_SOURCES = $(filter-out $(ENUM_SOURCES),$(BUILDER_SOURCES))

           BS_SOURCES = $(shell ls $(srcdir)/bootstrap/*.java) \
                         bootstrap/BootStrapLoader.java


@BUILD_LEGACY_PLUGINS_TRUE@  PLUGINS1 = $(shell find $(srcdir)/plugin -type f -wholename "*/v1_*_*/*.java")
 PLUGINS2 = $(shell find $(srcdir)/plugin -type f -wholename "*/v2_0_*/*.java")
 PLUGINS3 = $(shell find $(srcdir)/plugin -type f -wholename "*/v2_[1-4]_*/*.java")



#--------------------------------------------------------------------------------------------#
#   R U L E S                                                                                #
#--------------------------------------------------------------------------------------------#

all: Makefile $(API_JAR) plugin/plugin-all
	$(MAKE) $(VAULT) bootstrap-jar

$(ALL_JAR): java-all textures fonts
	(cd ../../..; \
         $(JAR) cvf us/temerity/pipeline/$(ALL_JAR) \
                    us/temerity/pipeline/*.class \
                    us/temerity/pipeline/core/*.class \
                    us/temerity/pipeline/glue/*.class \
                    us/temerity/pipeline/glue/io/*.class \
                    us/temerity/pipeline/laf/LookAndFeelLoader.class \
                    us/temerity/pipeline/laf/textures \
                    us/temerity/pipeline/laf/fonts \
                    us/temerity/pipeline/math/*.class \
                    us/temerity/pipeline/message/*.class \
                    us/temerity/pipeline/param/key/*.class; \
         $(JAR) uvf us/temerity/pipeline/$(ALL_JAR) \
                    us/temerity/pipeline/plugin/*.class \
                    us/temerity/pipeline/plugin/*/*/*.class \
                    us/temerity/pipeline/event/*.class \
                    us/temerity/pipeline/toolset/*.class \
                    us/temerity/pipeline/ui/*.class \
                    us/temerity/pipeline/ui/core/*.class \
                    us/temerity/pipeline/utils/*.class \
                    us/temerity/pipeline/utils/v2_0_14/*.class \
                    us/temerity/pipeline/stages/*.class \
                    us/temerity/pipeline/builder/*.class \
                    us/temerity/pipeline/builder/ui/*.class )
	(bdir=`pwd`; cd $(srcdir)/../../..; \
         $(JAR) uvf $$bdir/$(ALL_JAR) \
                    us/temerity/pipeline/laf/*.xml us/temerity/pipeline/laf/*.png)

$(API_JAR): java-all textures fonts
	(cd ../../..; \
         $(JAR) cvf us/temerity/pipeline/$(API_JAR) \
                    us/temerity/pipeline/*.class \
                    us/temerity/pipeline/glue/*.class \
                    us/temerity/pipeline/glue/io/*.class \
                    us/temerity/pipeline/laf/LookAndFeelLoader.class \
                    us/temerity/pipeline/laf/textures \
                    us/temerity/pipeline/laf/fonts \
                    us/temerity/pipeline/math/*.class \
                    us/temerity/pipeline/message/*.class \
                    us/temerity/pipeline/param/key/*.class; \
         $(JAR) uvf us/temerity/pipeline/$(API_JAR) \
                    us/temerity/pipeline/plugin/*.class \
                    us/temerity/pipeline/event/*.class \
                    us/temerity/pipeline/toolset/*.class \
                    us/temerity/pipeline/ui/*.class \
                    us/temerity/pipeline/utils/*.class \
                    us/temerity/pipeline/utils/v2_0_14/*.class \
                    us/temerity/pipeline/stages/*.class \
                    us/temerity/pipeline/builder/*.class \
                    us/temerity/pipeline/builder/ui/*.class )
	(bdir=`pwd`; cd $(srcdir)/../../..; \
         $(JAR) uvf $$bdir/$(API_JAR) \
                    us/temerity/pipeline/laf/*.xml us/temerity/pipeline/laf/*.png)

plugin/plugin-all: java-all java-plugins
	(cd plugin; $(srcdir)/plugin/archive-plugins $(JAR)) 

bootstrap-jar: bootstrap-all
	(cd ../../..; \
         $(JAR) uvf us/temerity/pipeline/$(API_JAR) \
                    us/temerity/pipeline/bootstrap/*.class)

bootstrap-all: $(BS_SOURCES)
	$(JAVA_C) $(JAVA_C_FLAGS) $(JAVA_PATHS) $(BS_SOURCES)
	touch $@
	rm -f $(top_builddir)/docs/javadoc/docs-all

bootstrap/BootStrapLoader.java: bootstrap/BootStrapLoader.java.in BootStrapFields
	awk -- '/@BOOTSTRAP_FIELDS@/ { system("cat BootStrapFields") } \
               !/@BOOTSTRAP_FIELDS@/ { print }' $< > $@

BootStrapFields $(VAULT): java-all
	@echo "-- VAULT SOURCES ----------------------------------------------------"
	@cat vault-sources
	$(JAVA) -classpath $(CRYPTO_APP_DIR) CryptoApp $(CUSTOMER_PROFILE) \
                --build-vault vault-sources $(VAULT) > BootStrapFields

ui/core/UserPrefs.java ui/core/JUserPrefsDialog.java: ui/core/prefs/GenUserPrefsApp.class
	$(JAVA) -cp ui/core/prefs GenUserPrefsApp

ui/core/prefs/GenUserPrefsApp.class: ui/core/prefs/GenUserPrefsApp.java
	@mkdir -p ui/core/prefs
	$(JAVA_C) $(JAVA_C_FLAGS) -d ui/core/prefs -classpath $(srcdir)/ui/core/prefs $<

java-all: $(JAVA_SOURCES) $(JAVA_MSG_SOURCES) $(JAVA_UI_SOURCES) $(JAVA_CORE_SOURCES) \
          $(JAVA_UI_CORE_SOURCES) $(JAVA_BLD_SOURCES) 
	$(JAVA_C) $(JAVA_C_FLAGS) $(JAVA_PATHS) $(JAVA_SOURCES)
	$(JAVA_C) $(JAVA_C_FLAGS) $(JAVA_PATHS) $(JAVA_EVENT_SOURCES)
	$(JAVA_C) $(JAVA_C_FLAGS) $(JAVA_PATHS) $(JAVA_MATH_SOURCES)
	$(JAVA_C) $(JAVA_C_FLAGS) $(JAVA_PATHS) $(JAVA_MSG_SOURCES)
	$(JAVA_C) $(JAVA_C_FLAGS) $(JAVA_PATHS) $(JAVA_UI_SOURCES)
	$(JAVA_C) $(JAVA_C_FLAGS) $(JAVA_PATHS) $(JAVA_CORE_SOURCES)
	$(JAVA_C) $(JAVA_C_FLAGS) $(JAVA_PATHS) $(JAVA_UI_CORE_SOURCES)
	$(JAVA_C) $(JAVA_C_FLAGS) $(JAVA_PATHS) $(JAVA_BLD_SOURCES)
	touch $@
	ls core/*.class ui/core/*.class core/exts/*.class > vault-sources
	rm -f $(top_builddir)/docs/javadoc/docs-all


java-plugins: java-plugins1 java-plugins2 java-plugins3
	touch $@

java-plugins1: $(PLUGINS1)
@BUILD_LEGACY_PLUGINS_TRUE@	$(JAVA_C) $(JAVA_C_NODEP_FLAGS) $(JAVA_PATHS) $(PLUGINS1)
	touch $@

java-plugins2: $(PLUGINS2)
	$(JAVA_C) $(JAVA_C_NODEP_FLAGS) $(JAVA_PATHS) $(PLUGINS2)
	touch $@

java-plugins3: $(PLUGINS3)
	$(JAVA_C) $(JAVA_C_FLAGS) $(JAVA_PATHS) $(PLUGINS3)
	touch $@


core/%.java: core/%.jj
	-@mkdir core
	cp --force $(srcdir)/core/parser/ParseException.java core/
	cp --force $(srcdir)/core/parser/TokenMgrError.java core/
	(cd core; $(JAVA_CC) $<)

glue/io/%.java: glue/io/%.jj
	-@mkdir -p glue/io
	cp --force $(srcdir)/glue/io/parser/ParseException.java glue/io/
	cp --force $(srcdir)/glue/io/parser/TokenMgrError.java glue/io/
	(cd glue/io; $(JAVA_CC) $<)


PackageInfo.java: PackageInfo.java.src
	@echo Adding legal notices to: $@
	awk -- '/@JAVA_LICENSE_STRING@/ { system("cat @top_srcdir@/docs/legal/java-@LICENSE_DOC@") } \
               !/@JAVA_LICENSE_STRING@/ { print }' $< > $@

textures: laf/scripts/filter-textures
	$(BASH) laf/scripts/filter-textures $(srcdir)/laf/maya/synth/images

fonts: CharcoalRegular

# CharterBTRoman: laf/scripts/filter-fonts
# 	$(BASH) laf/scripts/filter-fonts $@ $(srcdir)/laf/maya/synth/images

# HelveticaRegular: laf/scripts/filter-fonts
# 	$(BASH) laf/scripts/filter-fonts $@ $(srcdir)/laf/maya/synth/images

CharcoalRegular: laf/scripts/filter-fonts
	$(BASH) laf/scripts/filter-fonts $@ $(srcdir)/laf/maya/synth/images


web-icons: laf/scripts/build-web-icons textures
	$(BASH) laf/scripts/build-web-icons


#--------------------------------------------------------------------------------------------#

install: all installdirs install-jar install-plugins install-plugin-sources
	$(MAKE) -C builder $@

install-jar: $(API_JAR) $(VAULT)
	$(INSTALL) -m 444 $(API_JAR) $(VAULT) $(DESTDIR)$(ROOT_INST_DIR)/lib

install-plugins: plugin/plugin-all
	(cd ../../..; \
         for ppath in `cat us/temerity/pipeline/plugin/plugin-all`; \
         do \
           dir=$(DESTDIR)$(ROOT_INST_DIR)/plugins/`dirname $$ppath`; \
           echo $(mkinstalldirs) $$dir; \
           $(mkinstalldirs) $$dir; \
           echo $(INSTALL) -m 644 $$ppath $$dir; \
           $(INSTALL) -m 644 $$ppath $$dir; \
         done)
	$(mkinstalldirs) $(DESTDIR)$(ROOT_INST_DIR)/plugins-extra/us/temerity/pipeline/plugin
	mv $(DESTDIR)$(ROOT_INST_DIR)/plugins/us/temerity/pipeline/plugin/QueueStatsExt \
           $(DESTDIR)$(ROOT_INST_DIR)/plugins-extra/us/temerity/pipeline/plugin

PHONY: installdirs
installdirs:
	$(mkinstalldirs) $(DESTDIR)$(ROOT_INST_DIR)/lib
	$(mkinstalldirs) $(DESTDIR)$(ROOT_INST_DIR)/plconfig
	$(mkinstalldirs) $(DESTDIR)$(ROOT_INST_DIR)/logs
	$(mkinstalldirs) $(DESTDIR)$(PRODDIR)/working
	$(mkinstalldirs) $(DESTDIR)$(PRODDIR)/repository
	$(mkinstalldirs) $(DESTDIR)$(PRODDIR)/checksum
	$(mkinstalldirs) $(DESTDIR)$(PRODDIR)/restore
	$(mkinstalldirs) $(DESTDIR)$(PRODDIR)/target
	$(mkinstalldirs) $(DESTDIR)$(NODEDIR)

install-plugin-sources: $(JAVA_SOURCES)
	@for p in `find $(srcdir)/plugin -type f -name "*.java"`; do \
          f=`echo $$p | sed -e 's:$(srcdir)/::g'`; \
          dir=$(DESTDIR)$(ROOT_INST_DIR)/examples/us/temerity/pipeline/`dirname $$f`; \
          echo $(mkinstalldirs) $$dir; \
          $(mkinstalldirs) $$dir; \
          echo $(INSTALL) -m 444 $$p $(DESTDIR)$(ROOT_INST_DIR)/examples/us/temerity/pipeline/$$f; \
          $(INSTALL) -m 444 $$p $(DESTDIR)$(ROOT_INST_DIR)/examples/us/temerity/pipeline/$$f; \
         done


#--------------------------------------------------------------------------------------------#

uninstall: uninstall-jar

uninstall-jar: 
	rm -f $(DESTDIR)$(ROOT_INST_DIR)/lib/$(API_JAR)
	rm -f $(DESTDIR)$(ROOT_INST_DIR)/lib/$(VAULT)


#--------------------------------------------------------------------------------------------#

check: Makefile $(ALL_JAR) 
	$(MAKE) -C tests $@



#--------------------------------------------------------------------------------------------#

clean: clean-jar clean-vault clean-class clean-aux clean-parser clean-textures clean-fonts
	$(MAKE) -C tests $@

clean-jar:
	rm -f $(API_JAR) $(ALL_JAR)

clean-vault: 
	rm -f $(VAULT) BootStrapFields 

clean-class:
	rm -f *.class 
	rm -f bootstrap/*.class
	rm -f core/*.class
	rm -f core/exts/*.class
	rm -f glue/*.class
	rm -f glue/io/*.class
	rm -f laf/*.class
	rm -f message/*.class
	rm -f param/key/*.class
	rm -f plugin/*.class
	rm -f plugin/*/*/*.class
	rm -f plugin/*/*/*.jar
	rm -f event/*.class
	rm -f toolset/*.class
	rm -f ui/*.class
	rm -f ui/core/*.class
	rm -f ui/core/prefs/*.class
	rm -f utils/*.class utils/v2_0_14/*.class
	rm -f stages/*.class builder/*.class builder/ui/*.class
	rm -f java-all bootstrap-all

clean-aux:
	rm -f PackageInfo.cc
	rm -f bootstrap/BootStrapLoader.java
	rm -f core/ParseException.java core/SimpleCharStream.java 
	rm -f core/Token.java core/TokenMgrError.java
	rm -f glue/io/ParseException.java 
	rm -f glue/io/SimpleCharStream.java 
	rm -f glue/io/JavaCharStream.java 
	rm -f glue/io/Token.java glue/io/TokenMgrError.java
	rm -f core/PackageInfo.java core/VerifiedApp.java
	rm -f ui/core/JUserPrefsDialog.java ui/core/UserPrefs.java

clean-parser: clean-core-parser clean-glue-parser 

clean-core-parser: 
	@list='$(CORE_PARSERS)'; \
         for p in $$list; \
         do \
          f=core/$$p".java"; \
	  if test -f $$f; then \
            echo rm -f $$f; \
            rm -f $$f; \
          fi; \
          f=core/$$p"Constants.java"; \
	  if test -f $$f; then \
            echo rm -f $$f; \
            rm -f $$f; \
          fi; \
          f=core/$$p"TokenManager.java"; \
	  if test -f $$f; then \
            echo rm -f $$f; \
            rm -f $$f; \
          fi; \
         done	

clean-glue-parser: 
	@list='$(GLUE_PARSERS)'; \
         for p in $$list; \
         do \
          f=glue/io/$$p".java"; \
	  if test -f $$f; then \
            echo rm -f $$f; \
            rm -f $$f; \
          fi; \
          f=glue/io/$$p"Constants.java"; \
	  if test -f $$f; then \
            echo rm -f $$f; \
            rm -f $$f; \
          fi; \
          f=glue/io/$$p"TokenManager.java"; \
	  if test -f $$f; then \
            echo rm -f $$f; \
            rm -f $$f; \
          fi; \
         done	

clean-textures:
	rm -rf laf/textures

clean-fonts:
	rm -rf laf/fonts


clean-web-icons:
	rm -rf $(top_srcdir)/docs/images/node-icons


#--------------------------------------------------------------------------------------------#

PackageInfo.java.src: $(srcdir)/PackageInfo.java.src.in  $(top_builddir)/config.status
	cd $(top_builddir) && $(SHELL) ./config.status $(subdir)/$@

bootstrap/BootStrapLoader.java.in: $(srcdir)/bootstrap/BootStrapLoader.java.in.in  \
                                   $(top_builddir)/config.status
	cd $(top_builddir) && $(SHELL) ./config.status $(subdir)/$@

core/VerifiedApp.java: $(srcdir)/core/VerifiedApp.java.in  \
                       $(top_builddir)/config.status
	cd $(top_builddir) && $(SHELL) ./config.status $(subdir)/$@

laf/scripts/filter-fonts: $(srcdir)/laf/scripts/filter-fonts.in \
                          $(top_builddir)/config.status
	cd $(top_builddir) && $(SHELL) ./config.status $(subdir)/$@

laf/scripts/filter-textures: $(srcdir)/laf/scripts/filter-textures.in \
                             $(top_builddir)/config.status
	cd $(top_builddir) && $(SHELL) ./config.status $(subdir)/$@

laf/scripts/build-web-icons: $(srcdir)/laf/scripts/build-web-icons.in \
                             $(top_builddir)/config.status
	cd $(top_builddir) && $(SHELL) ./config.status $(subdir)/$@


Makefile: $(srcdir)/Makefile.in  $(top_builddir)/config.status
	cd $(top_builddir) && $(SHELL) ./config.status $(subdir)/$@

