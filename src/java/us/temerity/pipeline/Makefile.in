#--------------------------------------------------------------------------------------------#
#  S T O L E N   F R O M   A U T O M A K E                                                   #
#--------------------------------------------------------------------------------------------#

@SET_MAKE@

srcdir = @srcdir@
top_srcdir = @top_srcdir@
VPATH = @srcdir@
pkgdatadir = $(datadir)/@PACKAGE@
pkglibdir = $(libdir)/@PACKAGE@
pkgincludedir = $(includedir)/@PACKAGE@
top_builddir = ../../../../..

am__cd = CDPATH="$${ZSH_VERSION+.}$(PATH_SEPARATOR)" && cd
INSTALL = @INSTALL@
install_sh_DATA = $(install_sh) -c -m 644
install_sh_PROGRAM = $(install_sh) -c
install_sh_SCRIPT = $(install_sh) -c
INSTALL_HEADER = $(INSTALL_DATA)
transform = $(program_transform_name)
NORMAL_INSTALL = :
PRE_INSTALL = :
POST_INSTALL = :
NORMAL_UNINSTALL = :
PRE_UNINSTALL = :
POST_UNINSTALL = :
host_triplet = @host@
ACLOCAL = @ACLOCAL@
AMDEP_FALSE = @AMDEP_FALSE@
AMDEP_TRUE = @AMDEP_TRUE@
AMTAR = @AMTAR@
AR = @AR@
AUTOCONF = @AUTOCONF@
AUTOHEADER = @AUTOHEADER@
AUTOMAKE = @AUTOMAKE@
AWK = @AWK@
BASH = @BASH@
BUILD_MODE = @BUILD_MODE@
BUILD_NAME = @BUILD_NAME@
BUILD_TOOLSET = @BUILD_TOOLSET@
CC = @CC@
CCDEPMODE = @CCDEPMODE@
CFLAGS = @CFLAGS@
CHMOD = @CHMOD@
CHOWN = @CHOWN@
CONVERT = @CONVERT@
CPPFLAGS = @CPPFLAGS@
CRYPTO_APP_DIR = @CRYPTO_APP_DIR@
CUSTOMER_PROFILE = @CUSTOMER_PROFILE@
CVS = @CVS@
CXX = @CXX@
CXXCPP = @CXXCPP@
CXXDEPMODE = @CXXDEPMODE@
CXXFLAGS = @CXXFLAGS@
CYGPATH_W = @CYGPATH_W@
DEFS = @DEFS@
DEPDIR = @DEPDIR@
DF = @DF@
DIFF = @DIFF@
DLOPEN_LIB = @DLOPEN_LIB@
ECHO_C = @ECHO_C@
ECHO_N = @ECHO_N@
ECHO_T = @ECHO_T@
EGREP = @EGREP@
EXEEXT = @EXEEXT@
EXPORT_DYNAMIC = @EXPORT_DYNAMIC@
EXTRA_DEBUG_SUBDIRS = @EXTRA_DEBUG_SUBDIRS@
GEN_LIB = @GEN_LIB@
HOMEDIR = @HOMEDIR@
ID = @ID@
INSTALL_DATA = @INSTALL_DATA@
INSTALL_PROGRAM = @INSTALL_PROGRAM@
INSTALL_SCRIPT = @INSTALL_SCRIPT@
INSTALL_STRIP_PROGRAM = @INSTALL_STRIP_PROGRAM@
JAR = @JAR@
JAVA = @JAVA@
JAVADOC = @JAVADOC@
JAVA_C = @JAVA_C@
JAVA_CC = @JAVA_CC@
JAVA_C_FLAGS = @JAVA_C_FLAGS@
JAVA_H = @JAVA_H@
JAVA_HOME = @JAVA_HOME@
JAVA_INC = @JAVA_INC@
JAVA_RUNTIME_FLAGS = @JAVA_RUNTIME_FLAGS@
JNI_LDADD = @JNI_LDADD@
JNI_LDFLAGS = @JNI_LDFLAGS@
KILL = @KILL@
LDFLAGS = @LDFLAGS@
LIBOBJS = @LIBOBJS@
LIBS = @LIBS@
LTLIBOBJS = @LTLIBOBJS@
MAKE = @MAKE@
MAKEINFO = @MAKEINFO@
MOZILLA = @MOZILLA@
NODEDIR = @NODEDIR@
OBJEXT = @OBJEXT@
PACKAGE = @PACKAGE@
PACKAGE_BUGREPORT = @PACKAGE_BUGREPORT@
PACKAGE_NAME = @PACKAGE_NAME@
PACKAGE_STRING = @PACKAGE_STRING@
PACKAGE_TARNAME = @PACKAGE_TARNAME@
PACKAGE_VERSION = @PACKAGE_VERSION@
PATH_SEPARATOR = @PATH_SEPARATOR@
PIPELINE_GID = @PIPELINE_GID@
PIPELINE_UID = @PIPELINE_UID@
PL_FILE_PORT = @PL_FILE_PORT@
PL_FILE_SERVER = @PL_FILE_SERVER@
PL_MASTER_PORT = @PL_MASTER_PORT@
PL_MASTER_SERVER = @PL_MASTER_SERVER@
PRODDIR = @PRODDIR@
PTHREAD_LIB = @PTHREAD_LIB@
RANLIB = @RANLIB@
RELEASE_STAMP = @RELEASE_STAMP@
ROOT_INST_DIR = @ROOT_INST_DIR@
RPM_ROOT = @RPM_ROOT@
SET_MAKE = @SET_MAKE@
SHELL = @SHELL@
SSH = @SSH@
STRIP = @STRIP@
TEMPDIR = @TEMPDIR@
TOOLSETDIR = @TOOLSETDIR@
VERSION = @VERSION@
XDIFF = @XDIFF@
YXXFLAGS = @YXXFLAGS@
ac_ct_CC = @ac_ct_CC@
ac_ct_CXX = @ac_ct_CXX@
ac_ct_STRIP = @ac_ct_STRIP@
am__fastdepCC_FALSE = @am__fastdepCC_FALSE@
am__fastdepCC_TRUE = @am__fastdepCC_TRUE@
am__fastdepCXX_FALSE = @am__fastdepCXX_FALSE@
am__fastdepCXX_TRUE = @am__fastdepCXX_TRUE@
am__include = @am__include@
am__leading_dot = @am__leading_dot@
am__quote = @am__quote@
bindir = @bindir@
build = @build@
build_alias = @build_alias@
build_cpu = @build_cpu@
build_os = @build_os@
build_vendor = @build_vendor@
datadir = @datadir@
exec_prefix = @exec_prefix@
host = @host@
host_alias = @host_alias@
host_cpu = @host_cpu@
host_os = @host_os@
host_vendor = @host_vendor@
includedir = @includedir@
infodir = @infodir@
install_sh = @install_sh@
libdir = @libdir@
libexecdir = @libexecdir@
localstatedir = @localstatedir@
mandir = @mandir@
oldincludedir = @oldincludedir@
prefix = @prefix@
program_transform_name = @program_transform_name@
sbindir = @sbindir@
sharedstatedir = @sharedstatedir@
sysconfdir = @sysconfdir@
target_alias = @target_alias@

DIST_COMMON = Makefile.in
subdir = src/java/us/temerity/pipeline
mkinstalldirs = $(SHELL) $(top_srcdir)/config/mkinstalldirs


#--------------------------------------------------------------------------------------------#
#   V A R I A B L E S                                                                        #
#--------------------------------------------------------------------------------------------#

          TARGET = api.jar
           VAULT = vault

         PARSERS = GlueParser \
                   ToolsetEnvParser \
                   FileMgrOptsParser


      JAVA_PATHS = -d ../../.. -classpath "../../..:$(srcdir)/../../.."


           ENUMS = DependState \
                   ExecutionMethod \
                   FileState \
                   LinkPolicy \
                   LinkRelationship \
                   OverallNodeState \
                   OverallQueueState \
                   OverflowPolicy \
                   PropertyState \
                   QueueState \
                   VersionState \
                   core/PosixSignal \
                   message/FileRequest

    ENUM_SOURCES = $(patsubst %,$(srcdir)/%.java,$(ENUMS))

     API_SOURCES = $(shell ls $(srcdir)/*.java)

    CORE_SOURCES = $(shell ls $(srcdir)/core/*.java)

     MSG_SOURCES = $(shell ls $(srcdir)/message/*.java)

     ALL_SOURCES = $(API_SOURCES) $(CORE_SOURCES) $(MSG_SOURCES)

    JAVA_SOURCES = $(ENUM_SOURCES) $(filter-out $(ENUM_SOURCES),$(ALL_SOURCES)) \
                   core/PackageInfo.java $(patsubst %,core/%.java,$(PARSERS))

      BS_SOURCES = $(shell ls $(srcdir)/bootstrap/*.java) \
                   bootstrap/BootStrapLoader.java


          LOCKED = $(patsubst $(srcdir)/core/%.java,core/%,$(CORE_SOURCES)) \
                   $(patsubst $(srcdir)/message/%.java,message/%,$(MSG_SOURCES)) \
                   core/FileMgrOptsParserConstants \
		   core/FileMgrOptsParser \
		   core/FileMgrOptsParserTokenManager \
		   core/GlueParserConstants \
		   core/GlueParser \
		   core/GlueParserTokenManager \
		   core/PackageInfo \
		   core/ParseException \
		   core/SimpleCharStream \
		   core/Token \
		   core/TokenMgrError \
		   core/ToolsetEnvParserConstants \
		   core/ToolsetEnvParser \
		   core/ToolsetEnvParserTokenManager \
		   core/FileCleaner:CleanupTask \
		   core/FileMgrServer:HandlerTask \
		   core/NodeMgr:CheckedInBundle \
		   core/NodeMgr:WorkingBundle


#--------------------------------------------------------------------------------------------#
#   R U L E S                                                                                #
#--------------------------------------------------------------------------------------------#

all: Makefile $(TARGET) 
	$(MAKE) -C native $@
	$(MAKE) -C plugin $@
	$(MAKE) -C tests $@
	$(MAKE) $(VAULT) bootstrap-jar 

$(TARGET): java-all
	(cd ../../..; \
         $(JAR) cvf us/temerity/pipeline/$(TARGET) \
                    us/temerity/pipeline/*.class)

bootstrap-jar: bootstrap-all
	(cd ../../..; \
         $(JAR) uvf us/temerity/pipeline/$(TARGET) \
                    us/temerity/pipeline/bootstrap/*.class)

bootstrap-all: $(BS_SOURCES)
	$(JAVA_C) $(JAVA_C_FLAGS) $(JAVA_PATHS) $(BS_SOURCES)
	touch $@
	rm -f $(top_builddir)/docs/javadoc/docs-all

bootstrap/BootStrapLoader.java: bootstrap/BootStrapLoader.java.in BootStrapFields
	awk -- '/@BOOTSTRAP_FIELDS@/ { system("cat BootStrapFields") } \
               !/@BOOTSTRAP_FIELDS@/ { print }' $< > $@

BootStrapFields $(VAULT): java-all 
	@(f=`for x in $(LOCKED); \
            do \
              echo "$$x" | awk -F. '{print $$0 ".class"}' | sed -e 's/:/$$/g';\
            done`; \
          echo $(JAVA) -classpath $(CRYPTO_APP_DIR) CryptoApp $(CUSTOMER_PROFILE) \
            --build-vault $$f $(VAULT); \
          $(JAVA) -classpath $(CRYPTO_APP_DIR) CryptoApp $(CUSTOMER_PROFILE) \
            --build-vault $$f $(VAULT) > BootStrapFields);

java-all: $(JAVA_SOURCES)
	$(JAVA_C) $(JAVA_C_FLAGS) $(JAVA_PATHS) $(JAVA_SOURCES)
	touch $@
	rm -f $(top_builddir)/docs/javadoc/docs-all

%.java: %.jj
	-@mkdir core
	cp --force $(srcdir)/core/parser/ParseException.java core/
	cp --force $(srcdir)/core/parser/TokenMgrError.java core/
	(cd core; $(JAVA_CC) $<)


#--------------------------------------------------------------------------------------------#

install: all installdirs install-jar
	$(MAKE) -C native $@
	$(MAKE) -C plugin $@

install-jar: $(TARGET) $(VAULT)
	$(INSTALL) -m 444 $(TARGET) $(VAULT) $(DESTDIR)$(ROOT_INST_DIR)/lib

PHONY: installdirs
installdirs:
	$(mkinstalldirs) $(DESTDIR)$(ROOT_INST_DIR)/lib
	$(mkinstalldirs) $(DESTDIR)$(PRODDIR)/working
	$(mkinstalldirs) $(DESTDIR)$(PRODDIR)/repository
	$(mkinstalldirs) $(DESTDIR)$(PRODDIR)/checksum


#--------------------------------------------------------------------------------------------#

uninstall: uninstall-jar

uninstall-jar: 
	rm -f $(DESTDIR)$(ROOT_INST_DIR)/lib/$(TARGET)
	rm -f $(DESTDIR)$(ROOT_INST_DIR)/lib/$(VAULT)


#--------------------------------------------------------------------------------------------#

check: all
	$(MAKE) -C tests $@


#--------------------------------------------------------------------------------------------#

clean: clean-jar clean-vault clean-class clean-aux clean-parser 
	$(MAKE) -C native $@
	$(MAKE) -C plugin $@
	$(MAKE) -C tests $@

clean-jar:
	rm -f $(TARGET)

clean-vault: 
	rm -f $(VAULT) BootStrapFields 

clean-class:
	rm -f *.class 
	rm -f message/*.class
	rm -f core/*.class
	rm -f java-all

clean-aux:
	rm -f core/ParseException.java core/SimpleCharStream.java 
	rm -f core/Token.java core/TokenMgrError.java
	rm -f core/PackageInfo.java

clean-parser:
	@list='$(PARSERS)'; \
         for p in $$list; \
         do \
          f=core/$$p".java"; \
	  if test -f $$f; then \
            echo rm -f $$f; \
            rm -f $$f; \
          fi; \
          f=core/$$p"Constants.java"; \
	  if test -f $$f; then \
            echo rm -f $$f; \
            rm -f $$f; \
          fi; \
          f=core/$$p"TokenManager.java"; \
	  if test -f $$f; then \
            echo rm -f $$f; \
            rm -f $$f; \
          fi; \
         done	


#--------------------------------------------------------------------------------------------#

core/PackageInfo.java: $(srcdir)/core/PackageInfo.java.in  $(top_builddir)/config.status
	cd $(top_builddir) && $(SHELL) ./config.status $(subdir)/$@

bootstrap/BootStrapLoader.java.in: $(srcdir)/bootstrap/BootStrapLoader.java.in.in  \
                                   $(top_builddir)/config.status
	cd $(top_builddir) && $(SHELL) ./config.status $(subdir)/$@

Makefile: $(srcdir)/Makefile.in  $(top_builddir)/config.status
	cd $(top_builddir) && $(SHELL) ./config.status $(subdir)/$@

