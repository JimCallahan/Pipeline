options {
  STATIC = false;
}

PARSER_BEGIN(ToolsetEnvParser)

package us.temerity.pipeline.core;

import java.util.*;

/*------------------------------------------------------------------------------------------*/
/*   T O O L S E T   E N V   P A R S E R                                                    */
/*                                                                                          */
/*    The parser of environmental variable definitions stored in "cooked" toolset files.    */
/*------------------------------------------------------------------------------------------*/

public class 
ToolsetEnvParser
{
  /*----------------------------------------------------------------------------------------*/
  /*   I N T E R N A L S                                                                    */
  /*----------------------------------------------------------------------------------------*/
  
  /**
   * A table of environmental variables name/value pairs. 
   */ 
  protected TreeMap pEnv;  
  
}


PARSER_END(ToolsetEnvParser)

<DEFAULT> 
TOKEN :
{
  <NL: "\n">                                : DEFAULT
| <WS: ([" ","\t"])+>                       : DEFAULT
| <EXPORT: "export">                        : DEFAULT
| <NAME: (["a"-"z","A"-"Z","0"-"9","_"])+>  : DEFAULT
| <VALUE: ("=" (~["\n"])*)>                 : DEFAULT
}
  


/*------------------------------------------------------------------------------------------*/
/*   T O P   L E V E L                                                                      */
/*------------------------------------------------------------------------------------------*/

TreeMap
Env() :
{
  pEnv = new TreeMap();
}
{
  (Definition())* <EOF>
  {
    return pEnv;
  }
}


void
Definition() :
{
  Token n, v; 
}
{
  (<EXPORT> <WS> n=<NAME> v=<VALUE> <NL>) 
  { 
    String name  = n.image; 
    String value = v.image.substring(1);
    pEnv.put(name, value);
  }
}
    
