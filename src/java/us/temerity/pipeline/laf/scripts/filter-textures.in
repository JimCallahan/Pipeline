#!/bin/bash

src=$1
dest=laf/textures

tmpfile="filter-textures.scm"

rm -f $tmpfile
echo '(load "'$src/../../../scripts/build-mipmap.scm'")' > $tmpfile
echo '(load "'$src/../../../scripts/scale-convert.scm'")' >> $tmpfile

anynewer=0


#---------------------------------------------------------------------------------------------------
#   H E L P E R   F U N C T I O N S 
#---------------------------------------------------------------------------------------------------

function mkmipmaps {
  frame=$1
  mode=$2
  nstate=$3
  qstate=$4
  frozen=$5

  if [ $frozen -eq 1 ]
  then 
    simg=`printf "%s.%04d.sgi" $src/$mode"Frozen" $frame`
    dir=`echo $dest/$nstate-$qstate"-Frozen"-$mode`
  else 
    simg=`printf "%s.%04d.sgi" $src/$mode $frame`
    dir=`echo $dest/$nstate-$qstate-$mode`
  fi

  if [ ! -d $dir ]
  then 
    mkdir -p $dir
  fi

  filter=0
  size=128
  while [ $size -gt 1 ]
  do
    size=$(($size / 2)) 

    dimg=$dir/texture.$size.png
    if [ $simg -nt $dimg ] 
    then
      filter=1
    fi
  done

  if [ $filter -eq 1 ]
  then 
    printf '(build-mipmap "%s" "%s/texture" 64)\n' $simg $dir >> $tmpfile
    anynewer=1
  fi
}

function mkicon {
  frame=$1
  mode=$2
  nstate=$3
  qstate=$4  
  frozen=$5

  if [ $frozen -eq 1 ]
  then 
    simg=`printf "%s.%04d.sgi" $src/$mode"Frozen" $frame`
    dir=`echo $dest/$nstate-$qstate"-Frozen"-$mode`
  else 
    simg=`printf "%s.%04d.sgi" $src/$mode $frame`
    dir=`echo $dest/$nstate-$qstate-$mode`
  fi

  if [ ! -d $dir ]
  then 
    mkdir -p $dir
  fi

  dimg=$dir/texture.21.png
  if [ $simg -nt $dimg ] 
  then
    printf '(scale-convert "%s" "%s" 21)\n' $simg $dimg >> $tmpfile
    anynewer=1
  fi
}


#---------------------------------------------------------------------------------------------------
#   N O D E   I C O N S 
#---------------------------------------------------------------------------------------------------

for mode in Normal Selected Primary
do
  #-------------------------------------------------------------------------------------------------
  # Unfrozen Node/Queue State Icons
  #-------------------------------------------------------------------------------------------------
 
  frame=0
  for nstate in Pending CheckedIn Identical NeedsCheckOut Modified \
                Conflicted ModifiedLinks Missing Added Obsolete \
                NeedsCheckOutMicro NeedsCheckOutMajor MissingNewer ModifiedLocks
  do
    for qstate in Stale Queued Running Aborted Failed Finished Paused Undefined
    do
      if [ "$nstate" != "Added" -a "$nstate" != "Obsolete" ] 
      then 
        mkmipmaps $frame $mode $nstate $qstate 0
      fi
      mkicon $frame $mode $nstate $qstate 0
      frame=$(($frame + 1))	
    done
  done


  #-------------------------------------------------------------------------------------------------
  # Unfrozen Undefined Icons
  #-------------------------------------------------------------------------------------------------

  frame=112
  for extra in Blank
  do
    simg=`printf "%s.%04d.sgi" $src/$mode $frame`
    dir=`echo $dest/$extra-$mode`

    if [ ! -d $dir ]
    then 
      mkdir -p $dir
    fi

    filter=0
    size=128
    while [ $size -gt 1 ]
    do
      size=$(($size / 2)) 

      dimg=$dir/texture.$size.png

      if [ $simg -nt $dimg ] 
      then
	filter=1
      fi
    done

    if [ $filter -eq 1 ]
    then 
      printf '(build-mipmap "%s" "%s/texture" 64)\n' $simg $dir >> $tmpfile
      anynewer=1
    fi
  done

  for extra in Blank
  do
    simg=`printf "%s.%04d.sgi" $src/$mode $frame`
    dir=`echo $dest/$extra-$mode`

    if [ ! -d $dir ]
    then 
      mkdir -p $dir
    fi

    dimg=$dir/texture.21.png
    if [ $simg -nt $dimg ] 
    then
      printf '(scale-convert "%s" "%s" 21)\n' $simg $dimg >> $tmpfile
      anynewer=1
    fi
  done


  #-------------------------------------------------------------------------------------------------
  # Collapsed and Locked Icons
  #-------------------------------------------------------------------------------------------------

  if [ $mode == "Normal" ]
  then
    frame=113
    for extra in Collapsed Locked
    do 
      simg=`printf "%s.%04d.sgi" $src/$mode $frame`
      dir=`echo $dest/$extra`

      if [ ! -d $dir ]
      then 
        mkdir -p $dir
      fi

      filter=0
      size=128
      while [ $size -gt 1 ]
      do
	size=$(($size / 2)) 

	dimg=$dir/texture.$size.png

	if [ $simg -nt $dimg ] 
	then
	  filter=1
	fi
      done

      if [ $filter -eq 1 ]
      then 
	printf '(build-mipmap "%s" "%s/texture" 64)\n' $simg $dir >> $tmpfile
	anynewer=1
      fi

      frame=$(($frame + 1))
    done

    frame=113
    for extra in Collapsed Locked
    do 
      simg=`printf "%s.%04d.sgi" $src/$mode $frame`
      dir=`echo $dest/$extra-$mode`
      
      if [ ! -d $dir ]
      then 
	mkdir -p $dir
      fi

      dimg=$dir/texture.21.png
      if [ $simg -nt $dimg ] 
      then
	printf '(scale-convert "%s" "%s" 21)\n' $simg $dimg >> $tmpfile
	anynewer=1
      fi

      frame=$(($frame + 1))	
    done  
  fi


  #-------------------------------------------------------------------------------------------------
  # Frozen Node/Queue State Icons
  #-------------------------------------------------------------------------------------------------
 
  nstate=Identical

  qstate=Finished
  frame=21
  mkmipmaps $frame $mode $nstate $qstate 1
  mkicon $frame $mode $nstate $qstate 1

  qstate=Stale
  frame=16
  mkmipmaps $frame $mode $nstate $qstate 1
  mkicon $frame $mode $nstate $qstate 1


  nstate=ModifiedLinks

  qstate=Finished
  frame=53
  mkmipmaps $frame $mode $nstate $qstate 1
  mkicon $frame $mode $nstate $qstate 1

  qstate=Stale
  frame=48
  mkmipmaps $frame $mode $nstate $qstate 1
  mkicon $frame $mode $nstate $qstate 1


  nstate=ModifiedLocks

  qstate=Finished
  frame=109
  mkmipmaps $frame $mode $nstate $qstate 1
  mkicon $frame $mode $nstate $qstate 1

  qstate=Stale
  frame=104
  mkmipmaps $frame $mode $nstate $qstate 1
  mkicon $frame $mode $nstate $qstate 1


  nstate=Conflicted

  qstate=Finished
  frame=45
  mkmipmaps $frame $mode $nstate $qstate 1
  mkicon $frame $mode $nstate $qstate 1

  qstate=Stale
  frame=40
  mkmipmaps $frame $mode $nstate $qstate 1
  mkicon $frame $mode $nstate $qstate 1


  nstate=NeedsCheckOutMicro

  qstate=Finished
  frame=85
  mkmipmaps $frame $mode $nstate $qstate 1
  mkicon $frame $mode $nstate $qstate 1

  qstate=Stale
  frame=80
  mkmipmaps $frame $mode $nstate $qstate 1
  mkicon $frame $mode $nstate $qstate 1


  nstate=NeedsCheckOut

  qstate=Finished
  frame=29
  mkmipmaps $frame $mode $nstate $qstate 1
  mkicon $frame $mode $nstate $qstate 1

  qstate=Stale
  frame=24
  mkmipmaps $frame $mode $nstate $qstate 1
  mkicon $frame $mode $nstate $qstate 1


  nstate=NeedsCheckOutMajor

  qstate=Finished
  frame=29
  mkmipmaps $frame $mode $nstate $qstate 1
  mkicon $frame $mode $nstate $qstate 1

  qstate=Stale
  frame=24
  mkmipmaps $frame $mode $nstate $qstate 1
  mkicon $frame $mode $nstate $qstate 1


  nstate=Added
  mkicon 69 $mode $nstate Finished 1
  mkicon 64 $mode $nstate Stale 1


  nstate=Obsolete
  mkicon 77 $mode $nstate Finished 1
  mkicon 72 $mode $nstate Stale 1
done


#---------------------------------------------------------------------------------------------------
#   L I N K  I C O N S
#---------------------------------------------------------------------------------------------------

frame=0
for rel in None OneToOne All
do
  simg=`printf "%s/LinkIcons-painted.%04d.sgi" $src $frame`
  dir=`echo $dest/LinkRelationship-$rel`

  if [ ! -d $dir ]
  then 
    mkdir -p $dir
  fi

  filter=0
  size=128
  while [ $size -gt 1 ]
  do
    size=$(($size / 2)) 

    dimg=$dir/texture.$size.png

    if [ $simg -nt $dimg ] 
    then
      filter=1
    fi
  done

  if [ $filter -eq 1 ]
  then 
    printf '(build-mipmap "%s" "%s/texture" 64)\n' $simg $dir >> $tmpfile
    anynewer=1
  fi

  frame=$(($frame + 1))
done


#---------------------------------------------------------------------------------------------------
#   C O L O R   C I R C L E   I C O N S
#---------------------------------------------------------------------------------------------------

for extra in ColorCircle
do
  simg=`echo $src/$extra.sgi`
  dir=`echo $dest/$extra`

  if [ ! -d $dir ]
  then 
    mkdir -p $dir
  fi

  filter=0
  size=128
  while [ $size -gt 1 ]
  do
    size=$(($size / 2)) 

    dimg=$dir/texture.$size.png

    if [ $simg -nt $dimg ] 
    then
      filter=1
    fi
  done

  if [ $filter -eq 1 ]
  then 
    printf '(build-mipmap "%s" "%s/texture" 64)\n' $simg $dir >> $tmpfile
    anynewer=1
  fi
done



#---------------------------------------------------------------------------------------------
#   J O B   I C O N S
#---------------------------------------------------------------------------------------------

frame=0
for mode in Normal Selected Primary
do
  for qstate in Queued Preempted Running Aborted Failed Finished Paused Undefined
  do
    simg=`printf "%s/JobIcons.%04d.sgi" $src $frame`
    dir=`echo $dest/Job-$qstate-$mode`

    if [ ! -d $dir ]
    then 
      mkdir -p $dir
    fi

    filter=0
    size=128
    while [ $size -gt 1 ]
    do
      size=$(($size / 2)) 

      dimg=$dir/texture.$size.png
      if [ $simg -nt $dimg ] 
      then
        filter=1
      fi
    done

    if [ $filter -eq 1 ]
    then 
      printf '(build-mipmap "%s" "%s/texture" 64)\n' $simg $dir >> $tmpfile
      anynewer=1
    fi

    frame=$(($frame + 1))
  done
done

for mode in Normal Selected Primary
do
  for qstate in Queued Preempted Running Aborted Failed Finished Paused
  do
    simg=`printf "%s/JobIcons.%04d.sgi" $src $frame`
    dir=`echo $dest/ExternalJob-$qstate-$mode`

    if [ ! -d $dir ]
    then 
      mkdir -p $dir
    fi

    filter=0
    size=128
    while [ $size -gt 1 ]
    do
      size=$(($size / 2)) 

      dimg=$dir/texture.$size.png
      if [ $simg -nt $dimg ] 
      then
        filter=1
      fi
    done

    if [ $filter -eq 1 ]
    then 
      printf '(build-mipmap "%s" "%s/texture" 64)\n' $simg $dir >> $tmpfile
      anynewer=1
    fi

    frame=$(($frame + 1))
  done
done



#---------------------------------------------------------------------------------------------------
#   H I S T O R Y   I C O N S 
#---------------------------------------------------------------------------------------------------

for name in Cpu Mem Disk Job
do
  simg=`printf "%s/%s.sgi" $src $name`
  dir=`echo $dest/$name`

  if [ ! -d $dir ]
  then 
    mkdir -p $dir
  fi

  filter=0
  size=128
  while [ $size -gt 1 ]
  do
    size=$(($size / 2)) 

    dimg=$dir/texture.$size.png
    if [ $simg -nt $dimg ] 
    then
      filter=1
    fi
  done

  if [ $filter -eq 1 ]
  then 
    printf '(build-mipmap "%s" "%s/texture" 64)\n' $simg $dir >> $tmpfile
    anynewer=1
  fi

  frame=$(($frame + 1))
done



#---------------------------------------------------------------------------------------------------
#   R U N   G I M P                 
#---------------------------------------------------------------------------------------------------

if [ $anynewer -eq 1 ]
then 
  echo '(gimp-quit 1)' >> $tmpfile

  cat $tmpfile
  time @GIMP@ -i -d -b '(load "'$tmpfile'")'
fi

rm -f $tmpfile
