#!/bin/bash

src=$1
dest=laf/textures

tmpfile1="filter-textures1.scm"
tmpfile2="filter-textures2.scm"

rm -f $tmpfile1
echo '(load "'$src/../../../scripts/build-mipmap.scm'")' > $tmpfile1
echo '(load "'$src/../../../scripts/scale-convert.scm'")' >> $tmpfile1

rm -f $tmpfile2
echo '(load "'$src/../../../scripts/build-mipmap.scm'")' > $tmpfile2
echo '(load "'$src/../../../scripts/scale-convert.scm'")' >> $tmpfile2

anynewer1=0
anynewer2=0

#---------------------------------------------------------------------------------------------
#   H E L P E R   F U N C T I O N S 
#---------------------------------------------------------------------------------------------

function mkmipmaps {
  frame=$1
  title=$2

  simg=`printf "%s/Components.%04d.sgi" $src $frame`
  dir=`echo $dest/$title`

  if [ ! -d $dir ]
  then 
    mkdir -p $dir
  fi

  filter=0
  size=128
  while [ $size -gt 1 ]
  do
    size=$(($size / 2)) 

    dimg=$dir/texture.$size.png
    if [ $simg -nt $dimg ] 
    then
      filter=1
    fi
  done

  if [ $filter -eq 1 ]
  then 
    printf '(build-mipmap "%s" "%s/texture" 64)\n' $simg $dir >> $tmpfile1
    anynewer1=1
  fi
}

function mkicon {
  frame=$1
  title=$2

  simg=`printf "%s/Components.%04d.sgi" $src $frame`
  dir=`echo $dest/$title`

  if [ ! -d $dir ]
  then 
    mkdir -p $dir
  fi

  dimg=$dir/texture.21.png
  if [ $simg -nt $dimg ] 
  then
    printf '(scale-convert "%s" "%s" 21)\n' $simg $dimg >> $tmpfile2
    anynewer2=1
  fi
}


#---------------------------------------------------------------------------------------------
#   N O D E   I C O N S 
#---------------------------------------------------------------------------------------------

frame=1
for name in Ring Core InstRing InstCore \
            Pending CheckedIn Identical Conflicted \
            NeedsCheckOut NeedsCheckOutMicro NeedsCheckOutMajor \
            Modified ModifiedLinks ModifiedLocks \
            Missing MissingNewer
do	
  mkmipmaps $frame Node-$name
  mkicon $frame Node-$name

  frame=$(($frame + 1))	
done

frame=17
for name in Added Obsolete
do	
  mkicon $frame Node-$name

  frame=$(($frame + 1))	
done

frame=19
for name in Collapsed Locked               
do	
  mkmipmaps $frame $name

  frame=$(($frame + 1))	
done



#---------------------------------------------------------------------------------------------
#   J O B   I C O N S
#---------------------------------------------------------------------------------------------

frame=21
for name in Job-Ring Job-Core \
            ExternalJob-Ring ExternalJob-Core
do 
  mkmipmaps $frame $name
  mkicon $frame $name

  frame=$(($frame + 1))	
done



#---------------------------------------------------------------------------------------------
#   L I N K  I C O N S
#---------------------------------------------------------------------------------------------

frame=0
for rel in Core None OneToOne All
do
  simg=`printf "%s/LinkIcons.%04d.sgi" $src $frame`
  dir=`echo $dest/Link-$rel`

  if [ ! -d $dir ]
  then 
    mkdir -p $dir
  fi

  filter=0
  size=128
  while [ $size -gt 1 ]
  do
    size=$(($size / 2)) 

    dimg=$dir/texture.$size.png

    if [ $simg -nt $dimg ] 
    then
      filter=1
    fi
  done

  if [ $filter -eq 1 ]
  then 
    printf '(build-mipmap "%s" "%s/texture" 64)\n' $simg $dir >> $tmpfile1
    anynewer1=1
  fi

  frame=$(($frame + 1))
done



#---------------------------------------------------------------------------------------------
#   C O L O R   C I R C L E   I C O N S
#---------------------------------------------------------------------------------------------

for extra in ColorCircle
do
  simg=`echo $src/$extra.sgi`
  dir=`echo $dest/$extra`

  if [ ! -d $dir ]
  then 
    mkdir -p $dir
  fi

  filter=0
  size=128
  while [ $size -gt 1 ]
  do
    size=$(($size / 2)) 

    dimg=$dir/texture.$size.png

    if [ $simg -nt $dimg ] 
    then
      filter=1
    fi
  done

  if [ $filter -eq 1 ]
  then 
    printf '(build-mipmap "%s" "%s/texture" 64)\n' $simg $dir >> $tmpfile1
    anynewer1=1
  fi
done





#---------------------------------------------------------------------------------------------
#   H I S T O R Y   I C O N S 
#---------------------------------------------------------------------------------------------

for name in Cpu Mem Disk Job
do
  simg=`printf "%s/%s.sgi" $src $name`
  dir=`echo $dest/$name`

  if [ ! -d $dir ]
  then 
    mkdir -p $dir
  fi

  filter=0
  size=128
  while [ $size -gt 1 ]
  do
    size=$(($size / 2)) 

    dimg=$dir/texture.$size.png
    if [ $simg -nt $dimg ] 
    then
      filter=1
    fi
  done

  if [ $filter -eq 1 ]
  then 
    printf '(build-mipmap "%s" "%s/texture" 64)\n' $simg $dir >> $tmpfile2
    anynewer2=1
  fi

  frame=$(($frame + 1))
done



#---------------------------------------------------------------------------------------------
#   R U N   G I M P                 
#---------------------------------------------------------------------------------------------

if [ $anynewer1 -eq 1 ]
then 
  echo '(gimp-quit 1)' >> $tmpfile1

  cat $tmpfile1
  time @GIMP@ -i -d -b '(load "'$tmpfile1'")'
fi

if [ $anynewer2 -eq 1 ]
then 
  echo '(gimp-quit 1)' >> $tmpfile2

  cat $tmpfile2
  time @GIMP@ -i -d -b '(load "'$tmpfile2'")'
fi

rm -f $tmpfile1 $tmpfile2
