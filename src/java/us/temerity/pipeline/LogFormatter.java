// $Id: LogFormatter.java,v 1.6 2004/10/21 01:31:45 jim Exp $

package us.temerity.pipeline;

import java.util.Date;
import java.util.logging.*;
import java.text.*;

/*------------------------------------------------------------------------------------------*/
/*   L O G   F O R M A T T E R                                                              */
/*------------------------------------------------------------------------------------------*/

/** 
 * A standardized logging formatter for all log messages generated by Pipeline programs.
 */
public
class LogFormatter
  extends Formatter
{  
  /*----------------------------------------------------------------------------------------*/
  /*   C O N S T R U C T O R                                                                */
  /*----------------------------------------------------------------------------------------*/
  
  public 
  LogFormatter()
  {}


  /*----------------------------------------------------------------------------------------*/
  /*   F O R M A T                                                                          */
  /*----------------------------------------------------------------------------------------*/
  
  /**
   * Format the given log record and return the formatted string.
   *
   * @param record 
   *   The log record to be formatted.
   */ 
  public String 
  format
  (
   LogRecord record  
  ) 
  {
    String parts[] = record.getLoggerName().split("\\.");
    String name = parts[parts.length-1].toUpperCase();

    String stamp = Dates.format(new Date(record.getMillis()));

    if(record.getLevel().equals(Level.SEVERE)) {
      return (stamp + " " + name + "-ERROR: " + sNL +
	      record.getMessage() + sNL);
    }
    else if(record.getLevel().equals(Level.WARNING)) {
      return (stamp + " " + name + "-WARNING: " + sNL +
	      record.getMessage() + sNL);
    }
    else if(record.getLevel().equals(Level.INFO)) {
      return (record.getMessage() + sNL);
    }
    else  {
      return (stamp + " " + name + "-DEBUG " + 
	      "[" + record.getLevel().toString().toLowerCase() + "]: " + 
	      record.getMessage() + sNL);
    }
  }
  

  /*----------------------------------------------------------------------------------------*/
  /*   I N T E R N A L S                                                                    */
  /*----------------------------------------------------------------------------------------*/

  /** 
   * Cached line seperator.
   */ 
  private static String sNL = System.getProperty("line.separator", "\n");

}



