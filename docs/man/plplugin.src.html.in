<!DOCTYPE html PUBLIC "-//W3C//DTD HTML 4.01 Transitional//EN">

<HTML>
<HEAD>
  <META name="generator" content=
  "HTML Tidy for Linux (vers 31 October 2006), see www.w3.org">
  <META content="text/html; charset=us-ascii" http-equiv=
  "content-type">

  <TITLE>plplugin(1)</TITLE>
  <STYLE type="text/css">
div.c12 {margin-left: 40px; font-weight: bold;}
  a.c11 {font-style: italic;}
  div.c10 {margin-left: 40px}
  span.c9 {font-family: monospace;}
  div.c8 {margin-left: 80px;}
  br.c7 {font-weight: bold;}
  br.c6 {font-family: monospace;}
  div.c5 {margin-left: 40px;}
  span.c4 {font-weight: normal;}
  a.c3 {font-weight: bold;}
  span.c2 {font-style: italic;}
  span.c1 {font-weight: bold;}
  </STYLE>
</HEAD>

<BODY>
  <H3><A name="Name" id="Name"></A>Name</H3>

  <BLOCKQUOTE>
    <B>plplugin</B> - the Pipeline plugin installation tool<BR>
  </BLOCKQUOTE>

  <H3><A name="Synopsis" id="Synopsis"></A>Synopsis<BR></H3>

  <BLOCKQUOTE>
    <SPAN class="c1">plplugin</SPAN> [<A href=
    "#Global_Options"><SPAN class="c2">options</SPAN></A>] <A href=
    "#List">list</A> [<SPAN class=
    "c2">plugin-filtering-options</SPAN>]<BR>
    <SPAN class="c1">plplugin</SPAN> [<A href=
    "#Global_Options"><SPAN class="c2">options</SPAN></A>] <A href=
    "#Contents">contents</A> [<SPAN class=
    "c2">plugin-filtering-options</SPAN>]<BR>
    <SPAN class="c1">plplugin</SPAN> [<A href=
    "#Global_Options"><SPAN class="c2">options</SPAN></A>] <A href=
    "#Summary">summary</A><BR>
    <BR>
    <SPAN class="c1">plplugin</SPAN> [<A href=
    "#Global_Options"><SPAN class="c2">options</SPAN></A>] <A href=
    "#Install">install</A> [<SPAN class=
    "c2">install-options</SPAN>] <SPAN class=
    "c2">plugin-file1</SPAN> [<SPAN class="c2">plugin-file2
    ...</SPAN>]<BR>
    <SPAN class="c1">plplugin</SPAN> [<A href=
    "#Global_Options"><SPAN class="c2">options</SPAN></A>] <A href=
    "#Extract">extract</A> [<SPAN class=
    "c2">plugin-filtering-options</SPAN>] [<SPAN class=
    "c2">extract-options</SPAN>] [<SPAN class="c2">extract-path
    ...</SPAN>]<BR>
    <BR>
    <B>plplugin</B> <A class="c3" href="#--help">--help</A><BR>
    <B>plplugin</B> <A class="c3" href=
    "#--html-help">--html-help</A><BR>
    <B>plplugin</B> <A class="c3" href=
    "#--version_">--version</A><BR>
    <B>plplugin</B> <A class="c3" href=
    "#--release-date">--release-date</A><BR>
    <B>plplugin</B> <A class="c3" href=
    "#--copyright">--copyright</A><BR>
    <SPAN class="c1">plplugin <A href=
    "#--license">--license</A></SPAN><BR>
  </BLOCKQUOTE>

  <H3><A name="Description" id=
  "Description"></A>Description<BR></H3>

  <BLOCKQUOTE>
    Pipeline can be extended through the use of Java plugins
    written using the <A href="../javadoc/index.html"><SPAN class=
    "c1">Pipeline API</SPAN></A>.&nbsp; This tool is used to
    install new plugins or update existing plugins in a safe manner
    so that running Pipeline daemons and client programs will
    properly load and use the newly installed plugins.&nbsp; All
    Pipeline programs are capable of reloading plugins on the
    fly.&nbsp; This is important when developing and testing new
    plugins, but it requires that care be taken so that Pipeline
    maintains a consistent state.&nbsp;<BR>
    <BR>
    <SPAN class="c4">This program must be run by a user with Master
    Admin privileges</SPAN> when installing plugins (see <A href=
    "#--install"><SPAN class="c1">install</SPAN></A>).<BR>
  </BLOCKQUOTE>

  <H3><A name="Plugin_Limitations" id=
  "Plugin_Limitations"></A>Plugin Requirements</H3>

  <BLOCKQUOTE>
    Besides safely installing plugin files, <SPAN class=
    "c1">plplugin</SPAN>(1) inspects the compiled Java class or JAR
    files to make sure they will be loaded properly by Pipeline
    programs before performing the installation.&nbsp; Due to the
    dynamic nature of how Pipeline loads plugins, there are some
    restrictions on what plugins may contain and how they are named
    and versioned.<BR>
    <BR>
    All plugins must be a (direct or indirect) subclass of one of
    the plugin base classes: <A href=
    "../javadoc/us/temerity/pipeline/BaseEditor.html"><SPAN class=
    "c1">BaseEditor</SPAN></A>, <A href=
    "../javadoc/us/temerity/pipeline/BaseAction.html"><SPAN class=
    "c1">BaseAction</SPAN></A>, <A href=
    "../javadoc/us/temerity/pipeline/BaseComparator.html"><SPAN class="c1">
    BaseComparator</SPAN></A>, <A href=
    "../javadoc/us/temerity/pipeline/BaseTool.html"><SPAN class=
    "c1">BaseTool</SPAN></A>, <A href=
    "../javadoc/us/temerity/pipeline/BaseArchiver.html"><SPAN class="c1">
    BaseArchiver</SPAN></A>, <A href=
    "../javadoc/us/temerity/pipeline/BaseMasterExt.html"><SPAN class="c1">
    BaseMasterExt</SPAN></A>, <A href=
    "../javadoc/us/temerity/pipeline/BaseQueueExt.html"><SPAN class="c1">
    BaseQueueExt</SPAN></A>, <A href=
    "../javadoc/us/temerity/pipeline/BaseAnnotation.html"><SPAN class="c1">
    BaseAnnotation</SPAN></A>, <A href=
    "../javadoc/us/temerity/pipeline/BaseKeyChooser.html"><SPAN class="c1">
    BaseKeyChooser</SPAN></A> or <A href=
    "../javadoc/us/temerity/pipeline/BaseKeyChooser.html"><SPAN class="c1">
    BaseBuilderCollection</SPAN></A>.&nbsp; Each of these classes
    has a protected constructor which should be called from your
    plugin's single no-arg constructor with constant values for the
    following four parameters:<BR>
  </BLOCKQUOTE>

  <DIV class="c5">
    <STRONG><CODE>String name</CODE></STRONG><BR>
  </DIV>

  <DIV class="c5">
    <BR>

    <DIV class="c5">
      The unique name of the plugin.&nbsp; This name should be
      short since it will be used in popup menus and option lists
      within plui(1) to identify the plugin.&nbsp; For convenience
      of using the names in scripts and command line arguments, its
      advisable that it does not contain whitespace or other
      non-printable characters.<BR>
    </DIV><BR>
    <STRONG><CODE>VersionID vid</CODE></STRONG><BR>
    <BR>

    <DIV class="c5">
      The plugin revision number.&nbsp; Pipeline allows multiple
      versions of the same plugin to be used simultaneously and
      this revision number is used to distinguish between the
      various versions.&nbsp;<BR>
    </DIV><BR>
    <STRONG><CODE>String vendor</CODE></STRONG><BR>

    <DIV class="c5">
      <BR>
      The short name of the organization which created the
      plugin.&nbsp;&nbsp; This name will also be displayed in the
      UI and should be fairly short. The plugins which are part of
      the Pipeline release all have a vendor name of
      "Temerity".&nbsp;&nbsp; When choosing a vendor name for your
      site, it would be prudent to consult Support &lt;<A href=
      "mailto:support@temerity.us">support@temerity.us</A>&gt; to
      make sure your choice is unique.&nbsp; In particular, you
      should NEVER use the "Temerity" vendor name for your
      plugins.<BR>
    </DIV><BR>
    <STRONG><CODE>String desc</CODE></STRONG><BR>
    <BR>

    <DIV class="c5">
      A short description of the plugin.&nbsp; This should be a
      short phrase suitable for use in tool tips and other one line
      UI contexts.<BR>
    </DIV>
  </DIV>

  <BLOCKQUOTE>
    The plugin class should belong to a Java package who's last
    component corresponds with the plugin revision number.&nbsp;
    Due to the syntax of Java package specifications a "v" must be
    prepended to the version number and the version number
    component must be separated by "_" instead of "."
    characters.&nbsp;<BR>
    <BR>
    For example, here is complete source code of the 2.0.0 version
    of the simple Emacs editor plugin distributed with
    Pipeline:<BR>
    <BR>

    <DIV class="c5">
      <CODE><A name="emacs" id="emacs"></A>package
      us.temerity.pipeline.plugin.v2_0_0;<BR class="c6">
      <BR class="c6">
      import us.temerity.pipeline.BaseEditor;<BR class="c6">
      import us.temerity.pipeline.VersionID;<BR class="c6">
      <BR class="c6">
      /**<BR class="c6">
      &nbsp;* The GNU extensible, customizable, self-documenting
      text editor.<BR class="c6">
      &nbsp;*/<BR class="c6">
      public<BR class="c6">
      class EmacsEditor<BR class="c6">
      &nbsp; extends BaseEditor<BR class="c6">
      {&nbsp;<BR class="c6">
      &nbsp; public<BR class="c6">
      &nbsp; EmacsEditor()<BR class="c6">
      &nbsp; {<BR class="c6">
      &nbsp;&nbsp;&nbsp; super("Emacs", new VersionID("2.0.0"),
      "Temerity",<BR class="c6">
      &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp;&nbsp;&nbsp; "The GNU
      text editor.",<BR class="c6">
      &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
      "emacs");<BR class="c6">
      &nbsp; }<BR class="c6">
      <BR class="c6">
      &nbsp; private static final long serialVersionUID =<BR>
      &nbsp;&nbsp;&nbsp; -5044455288055639029L;<BR class="c6">
      }</CODE>
    </DIV><BR>
    You could use a shorter package name, but the general Java
    convention of prefixing the package with the company domain in
    reverse order is advisable to reduce the possiblity of Java
    class name clashes.<BR>
    <BR>
    Notice that the Java class name is "EmacsEditor" and not
    "Emacs".&nbsp; There is no requirement that Editor plugins have
    "Editor" in their names or that the class name corresponds to
    the plugin name, but its probably not a bad idea to follow this
    convention in order to keeping things
    straight.&nbsp;&nbsp;&nbsp;<BR>
    <BR>
    Note also that a "serialVersionUID" is provided for the
    plugin.&nbsp; This is important since these classes are
    serialized by Pipeline programs when communicating with each
    other over the network and this reduces the possibility of
    Java's serialization system from getting mixed up.&nbsp; You
    can easily generate this ID using the <SPAN class=
    "c1">serialver</SPAN>(1) program shipped with Sun's Java
    development environment.<BR>
    <BR>
    The source code for all of the plugins which are distributed by
    Temerity with Pipeline can be found here:<BR>
    <BR>

    <DIV class="c5">
      @ROOT_INST_DIR@/examples/us/temerity/pipeline/plugin<BR>
    </DIV>
  </BLOCKQUOTE>

  <H3><A name="Important_Caveats" id=
  "Important_Caveats"></A>Important Caveats</H3>

  <BLOCKQUOTE>
    Pipeline has a flexible plugin architecture, but it can get you
    into trouble if you aren't careful.&nbsp;<BR>
    <BR>
    Action plugins should be treated with some extra caution.&nbsp;
    Its important to remember that one of Pipeline's fundamental
    principles is that checked-in nodes with regeneration actions
    should be able to exactly regenerate their files at any
    time.&nbsp; If you were to replace a version of an Action
    plugin that is used by checked-in nodes you would be taking a
    big risk that your changes would violate this behavior.<BR>
    <BR>
    The plugin versioning prevents this possibility.&nbsp; Whenever
    you need to change an existing plugin, you must make the
    changes in a new plugin version.&nbsp;&nbsp; This guarantees
    that both checked-in and working versions of nodes which use
    the older versions of the plugin will continue to behave in a
    consistent manner.&nbsp;<BR>
    <BR>
    To facilitate testing of new plugin versions, the API provides
    a way to mark plugin versions as being under active development
    by calling the <BIG><CODE><A href=
    "../javadoc/us/temerity/pipeline/BasePlugin.html#underDevelopment">
    <SPAN class="c1">underDevelopment</SPAN></A></CODE></BIG>
    method in the plugin's constructor.&nbsp; This lets Pipeline
    know that the plugin might change substantially and that its
    use should be restricted when changes could cause
    problems.&nbsp; In particular, nodes who's Action plugin is
    under development cannot be Checked-In.&nbsp;<BR>
    <BR>
    Plugins which are under developement can also be repeatably
    updated using the <A href="#--install"><SPAN class=
    "c1">install</SPAN></A> option.&nbsp; Once the the plugin is no
    longer under developement, it cannot be updated and a new
    version has to be created in order to change the plugin.<BR>
  </BLOCKQUOTE>

  <H3><A name="Information_Options" id=
  "Information_Options"></A>Information Options</H3>

  <BLOCKQUOTE>
    The following options provide information about
    <B>plplugin</B>(1) and then immediately exit:
  </BLOCKQUOTE>

  <BLOCKQUOTE>
    <B><A name="--help"></A>--help</B><BR>

    <BLOCKQUOTE>
      Prints a brief usage message and exits.<BR>
    </BLOCKQUOTE><B><A name="--html-help"></A>--html-help</B><BR>

    <BLOCKQUOTE>
      Opens this page using the default web browser.
    </BLOCKQUOTE><B><A name="--version"></A>--version</B><BR>

    <BLOCKQUOTE>
      Prints the version number of this software and exits.<BR>
    </BLOCKQUOTE><B><A name=
    "--release-date"></A>--release-date</B><BR>

    <BLOCKQUOTE>
      Prints date that this software was released and exits.<BR>
    </BLOCKQUOTE><B><A name="--copyright"></A>--copyright</B><BR>
    <BR>

    <DIV class="c5">
      Prints the <A href="#Copyright"><SPAN class="c1">copyright
      notice</SPAN></A> for this software and exits.<BR>
      <BR>
    </DIV><SPAN class="c1"><A name="--license"></A>--license<BR>
    <BR></SPAN>

    <DIV class="c5">
      Prints the <A href="#License_Agreement"><SPAN class=
      "c1">license agreement</SPAN></A> for this software and
      exits.<BR>
    </DIV>
  </BLOCKQUOTE>

  <H3><A name="Global_Options" id="Global_Options"></A>Global
  Options<BR></H3>

  <DIV class="c5">
    <SPAN class="c1"><A name=
    "--log-file"></A>--log-file</SPAN>=<SPAN class=
    "c2">filename<BR>
    <BR></SPAN>

    <DIV class="c5">
      Write all output to the given log file (filename) instead of
      printing to stdout.<BR>
      <BR>
    </DIV><SPAN class="c1"><A name=
    "--default-log-file"></A>--standard-log-file<BR>
    <BR></SPAN>

    <DIV class="c5">
      Write all output to the standard log file for <SPAN class=
      "c1">plplugin</SPAN>(1) instead of printing to stdout.<BR>
      <BR>
      The standard log file for this site is:<BR>

      <DIV class="c5">
        <BR>
        @ROOT_INST_DIR@/logs/plplugin.log.#<BR>
      </DIV>
    </DIV><BR>
    <SPAN class="c1"><A name=
    "--log-depth"></A>--log-backups</SPAN>=<SPAN class=
    "c2">num</SPAN><BR>

    <DIV class="c5">
      <BR>
      When logging to a file using <A href=
      "#--log-file"><SPAN class="c1">--log-file</SPAN></A>, this
      option sets the number of rotating backups (<SPAN class=
      "c2">num</SPAN>) to maintain of the logfile.&nbsp;&nbsp; The
      names of the backup files are the same as the log file with
      the backup number appended to the end of the
      name.&nbsp;&nbsp; The logfile will be automatically close the
      current logfile, rotate the backups and reopen the logfile
      whenever the log grows to larger than 10MB.<BR>
      <BR>
      The default number of backups is (10).<BR>
    </DIV><BR>
    <SPAN class="c1"><A name="--log"></A>--log</SPAN>=<SPAN class=
    "c2">logger:level</SPAN>[<SPAN class=
    "c2">,logger:level</SPAN>[...]]
  </DIV>

  <DIV class="c5">
    <BR>

    <DIV class="c5">
      In addition to the normal output, <B>plplugin</B>(1) can
      generate detailed output tracing the various stages of
      internal execution.&nbsp; The arguments control the several
      different types of logging information (<SPAN class=
      "c2">logger</SPAN>) and different amounts of information
      (<SPAN class="c2">level</SPAN>) of each type to
      generate.&nbsp; Several loggers can be modified in one
      option.<BR>
      <BR>
      The (<SPAN class="c2">logger</SPAN>) portion of the option's
      argument can be:<BR>
      <BR>

      <DIV class="c5">
        <SPAN class="c1">all</SPAN><BR class="c7">
      </DIV>

      <DIV class="c8">
        A shortcut for specifying all loggers at once.<BR>
      </DIV>

      <DIV class="c5">
        <BR>
        <SPAN class="c1">arg</SPAN><BR>
      </DIV>

      <DIV class="c8">
        Logs errors related to parsing the command-line
        options.<BR>
        <BR>
      </DIV>

      <DIV class="c5">
        <SPAN class="c1">ops</SPAN><BR>
      </DIV>

      <DIV class="c5">
        <DIV class="c5">
          Logs command operations.<BR>
          <BR>
        </DIV><SPAN class="c1">net</SPAN><BR>
      </DIV>

      <DIV class="c8">
        Logs network connections and activity.
      </DIV><BR>

      <DIV class="c5">
        <SPAN class="c1">plg</SPAN><BR>

        <DIV class="c5">
          Logs the loading and initialization of Pipeline
          plugins.<BR>
          <BR>
        </DIV>
      </DIV><BR>
      The (<SPAN class="c2">level</SPAN>) portion of the option's
      argument can be:<BR>
      <BR>

      <DIV class="c5">
        <SPAN class="c1">severe</SPAN><BR>
      </DIV>

      <DIV class="c8">
        This level is used for error messages and other
        catastrophic events.<BR>
      </DIV>

      <DIV class="c5">
        <BR class="c7">
        <SPAN class="c1">warning</SPAN><BR>
      </DIV>

      <DIV class="c8">
        This level is used for non-fatal error messages and
        advisory information.<BR>
      </DIV>

      <DIV class="c5">
        <BR class="c7">
        <SPAN class="c1">info</SPAN><BR>
      </DIV>

      <DIV class="c8">
        This is the default output level for all loggers and is
        used for normal output from <B>plplugin</B>(1).<BR>
      </DIV>

      <DIV class="c5">
        <BR class="c7">
        <SPAN class="c1">fine</SPAN><BR>
        <SPAN class="c1">finer</SPAN><BR>
        <SPAN class="c1">finest</SPAN><BR>
      </DIV>

      <DIV class="c8">
        These three levels are used for increasingly more detailed
        command tracing messages.<BR>
      </DIV>
    </DIV>
  </DIV><BR>

  <H3><A name="Information_Action_Commands" id=
  "Information_Action_Commands"></A>Information Action
  Commands<BR></H3>

  <DIV class="c5">
    <SPAN class="c1"><A name="List" id=
    "List"></A><STRONG>list</STRONG></SPAN> [<A href=
    "#Plugin_Filtering_Options"><SPAN class=
    "c2">plugin-filtering-options</SPAN></A>]<BR>
    <BR>

    <DIV class="c5">
      Lists information about each plugin and exits.&nbsp;&nbsp;
      The <A href="#Plugin_Filtering_Options"><SPAN class=
      "c2">plugin-filtering-options</SPAN></A> can be used to
      filter the results.
    </DIV>
  </DIV><BR>

  <DIV class="c5">
    <A name="Contents" id="Contents"></A><SPAN class=
    "c1">contents</SPAN> [<A href=
    "#Plugin_Filtering_Options"><SPAN class=
    "c2">plugin-filtering-options</SPAN></A>]<BR>
    <BR>

    <DIV class="c5">
      List information about each plugin including associated
      resources and exits.&nbsp; The <A href=
      "#Plugin_Filtering_Options"><SPAN class=
      "c2">plugin-filtering-options</SPAN></A> can be used to
      filter the results.
    </DIV>
  </DIV><BR>

  <DIV class="c5">
    <A name="Summary" id="Summary"></A><SPAN class=
    "c1">summary</SPAN><BR>

    <DIV class="c5">
      Prints a summary of the numbers of required, loaded and
      unknown plugins organized plugin vendor.
    </DIV>
  </DIV><BR>

  <DIV class="c5">
    <BR>
    <A name="Plugin_Filtering_Options" id=
    "Plugin_Filtering_Options"></A><SPAN class="c1">Plugin
    Filtering Options</SPAN><BR>
    <BR>
  </DIV>

  <DIV class="c5">
    <DIV class="c5">
      <SPAN class="c1"><A name="Plugin_Filtering_Options--status"
      id=
      "Plugin_Filtering_Options--status"></A>--status=</SPAN><SPAN class="c2">filter[,filter
      ...]</SPAN><BR>
    </DIV>

    <DIV class="c5">
      <DIV class="c5">
        <DIV class="c5"></DIV><SPAN class="c2"><BR></SPAN>
      </DIV>

      <DIV class="c5">
        The possible installation status filtering options
        (<SPAN class="c2">filter</SPAN>) can be:<BR>
      </DIV>
    </DIV>

    <DIV class="c8">
      <BR>
    </DIV>

    <DIV class="c5">
      <DIV class="c8">
        <SPAN class="c1">all</SPAN><BR>
      </DIV>

      <DIV class="c5">
        <DIV class="c10"></DIV>

        <DIV class="c8">
          This is the default value that performs no filtering.<BR>
        </DIV>
      </DIV>

      <DIV class="c5">
        <BR>
      </DIV>

      <DIV class="c8">
        <SPAN class="c1">req</SPAN><BR>
      </DIV>

      <DIV class="c5">
        <DIV class="c10"></DIV>

        <DIV class="c8">
          This filter displays required plugins.<BR>
        </DIV>
      </DIV>

      <DIV class="c5">
        <BR>
      </DIV>

      <DIV class="c8">
        <SPAN class="c1">inst</SPAN><BR>
      </DIV>

      <DIV class="c5">
        <DIV class="c10"></DIV>

        <DIV class="c8">
          This filter displays installed plugins.<BR>
        </DIV>
      </DIV>

      <DIV class="c5">
        <BR>
      </DIV>

      <DIV class="c8">
        <SPAN class="c1">dev</SPAN><BR>
      </DIV>

      <DIV class="c5">
        <DIV class="c10"></DIV>

        <DIV class="c8">
          This filter displays plugins under development.<BR>
        </DIV>
      </DIV>

      <DIV class="c5">
        <BR>
      </DIV>

      <DIV class="c8">
        <SPAN class="c1">perm</SPAN><BR>
      </DIV>

      <DIV class="c5">
        <DIV class="c10"></DIV>

        <DIV class="c8">
          This filter displays plugins NOT under development.<BR>
        </DIV>
      </DIV>

      <DIV class="c5">
        <BR>
      </DIV>

      <DIV class="c8">
        <SPAN class="c1">miss</SPAN><BR>
      </DIV>

      <DIV class="c5">
        <DIV class="c10"></DIV>

        <DIV class="c8">
          This filter displays plugins that need to be
          installed.<BR>
        </DIV>
      </DIV>

      <DIV class="c5">
        <BR>
      </DIV>

      <DIV class="c8">
        <SPAN class="c1">unknown</SPAN><BR>
      </DIV>

      <DIV class="c5">
        <DIV class="c10"></DIV>

        <DIV class="c8">
          This filter displays plugins that are unknown to
          plpluginmgr.<BR>
        </DIV>
      </DIV>
    </DIV>

    <DIV class="c5">
      <BR>
    </DIV>

    <DIV class="c5">
      <SPAN class="c1"><A name="Plugin_Filtering_Options--type" id=
      "Plugin_Filtering_Options--type"></A>--type=</SPAN><SPAN class="c2">filter[,filter
      ...]</SPAN><BR>
    </DIV>

    <DIV class="c10"></DIV>

    <DIV class="c8">
      <BR>
    </DIV>

    <DIV class="c5">
      <DIV class="c5">
        The possible plugin type filtering options (<SPAN class=
        "c2">filter</SPAN>) can be:<BR>
      </DIV>

      <DIV class="c5">
        <BR>
      </DIV>

      <DIV class="c5">
        <DIV class="c5">
          <SPAN class="c1">all</SPAN><BR>
        </DIV>

        <DIV class="c5">
          <DIV class="c10"></DIV>

          <DIV class="c5">
            This is the default value that performs no
            filtering.<BR>
          </DIV>
        </DIV>

        <DIV class="c5">
          <BR>
        </DIV>

        <DIV class="c5">
          <SPAN class="c1">act</SPAN><BR>
        </DIV>

        <DIV class="c5">
          <DIV class="c10"></DIV>

          <DIV class="c5">
            This filter displays Action plugins.<BR>
          </DIV>
        </DIV>

        <DIV class="c5">
          <BR>
        </DIV>

        <DIV class="c5">
          <SPAN class="c1">annot</SPAN><BR>
        </DIV>

        <DIV class="c5">
          <DIV class="c10"></DIV>

          <DIV class="c5">
            This filter displays Annotation plugins.<BR>
          </DIV>
        </DIV>

        <DIV class="c5">
          <BR>
        </DIV>

        <DIV class="c5">
          <SPAN class="c1">arch</SPAN><BR>
        </DIV>

        <DIV class="c5">
          <DIV class="c10"></DIV>

          <DIV class="c5">
            This filter displays Archiver plugins.<BR>
          </DIV>
        </DIV>

        <DIV class="c5">
          <BR>
        </DIV>

        <DIV class="c5">
          <SPAN class="c1">build</SPAN><BR>
        </DIV>

        <DIV class="c5">
          <DIV class="c10"></DIV>

          <DIV class="c5">
            This filter displays BuilderCollection plugins.<BR>
          </DIV>
        </DIV>

        <DIV class="c5">
          <BR>
        </DIV>

        <DIV class="c5">
          <SPAN class="c1">comp</SPAN><BR>
        </DIV>

        <DIV class="c5">
          <DIV class="c10"></DIV>

          <DIV class="c5">
            This filter displays Comparator plugins.<BR>
          </DIV>
        </DIV>

        <DIV class="c5">
          <BR>
        </DIV>

        <DIV class="c5">
          <SPAN class="c1">edit</SPAN><BR>
        </DIV>

        <DIV class="c5">
          <DIV class="c10"></DIV>

          <DIV class="c5">
            This filter displays Editor plugins.<BR>
          </DIV>
        </DIV>

        <DIV class="c5">
          <BR>
        </DIV>

        <DIV class="c5">
          <SPAN class="c1">key</SPAN><BR>
        </DIV>

        <DIV class="c5">
          <DIV class="c10"></DIV>

          <DIV class="c5">
            This filter displays KeyChooser plugins.<BR>
          </DIV>
        </DIV>

        <DIV class="c5">
          <BR>
        </DIV>

        <DIV class="c5">
          <SPAN class="c1">master</SPAN><BR>
        </DIV>

        <DIV class="c5">
          <DIV class="c10"></DIV>

          <DIV class="c5">
            This filter displays MasterExt plugins.<BR>
          </DIV>
        </DIV>

        <DIV class="c5">
          <BR>
        </DIV>

        <DIV class="c5">
          <SPAN class="c1">queue</SPAN><BR>
        </DIV>

        <DIV class="c5">
          <DIV class="c10"></DIV>

          <DIV class="c5">
            This filter displays QueueExt plugins.<BR>
          </DIV>
        </DIV>

        <DIV class="c5">
          <BR>
        </DIV>

        <DIV class="c5">
          <SPAN class="c1">tool</SPAN><BR>
        </DIV>

        <DIV class="c5">
          <DIV class="c10"></DIV>

          <DIV class="c5">
            This filter displays Tool plugins.<BR>
          </DIV>
        </DIV>
      </DIV>

      <DIV class="c5">
        <BR>
      </DIV>
    </DIV>

    <DIV class="c5">
      <SPAN class="c1"><A name="Plugin_Filtering_Options--vendor"
      id=
      "Plugin_Filtering_Options--vendor"></A>--vendor=</SPAN><SPAN class="c2">filter[,filter
      ...]</SPAN><BR>
      <BR>

      <DIV class="c5">
        The vendor filtering options (<SPAN class=
        "c2">filter</SPAN>) must be an exact match for the plugin's
        vendor property.<BR>
      </DIV>
    </DIV>

    <DIV class="c5">
      <BR>
    </DIV>

    <DIV class="c5">
      <SPAN class="c1"><A name="Plugin_Filtering_Options--name" id=
      "Plugin_Filtering_Options--name"></A>--name=</SPAN><SPAN class="c2">filter[,filter
      ...]</SPAN><BR>
      <BR>

      <DIV class="c5">
        The name filtering options (<SPAN class="c2">filter</SPAN>)
        must be an exact match for the plugin's name property.<BR>
      </DIV>
    </DIV><BR>

    <DIV class="c5">
      <SPAN class="c1"><A name="Plugin_Filtering_Options--version"
      id=
      "Plugin_Filtering_Options--version"></A>--version=</SPAN><SPAN class="c2">filter[,filter
      ...]</SPAN><BR>

      <DIV class="c5">
        The version filtering options (<SPAN class=
        "c2">filter</SPAN>) must be an exact match for the plugin's
        name property.<BR>
      </DIV>
    </DIV>
  </DIV><BR>
  <BR>

  <DIV class="c5">
    <B>Examples</B><BR>

    <DIV class="c5">
      <BR>
      To display all Builder Collection plugins from the Temerity
      vendor which are under development:<BR>
      <BR>

      <DIV class="c5">
        plplugin list --status=dev --type=build
        --vendor=Temerity<BR>
      </DIV><BR>
      To display all Action, Editor and Tool plugins:<BR>
      <BR>

      <DIV class="c5">
        plplugin list --type=act,edit,tool<BR>
      </DIV><BR>
      To display all missing and unknown plugins:<BR>
      <BR>

      <DIV class="c5">
        plplugin list --status=miss,unknown
      </DIV>
    </DIV>
  </DIV><BR>

  <H3><A name="Installation_Command" id=
  "Installation_Command"></A>Installation Command</H3>

  <DIV class="c5">
    <SPAN class="c1"><A name="Install" id=
    "Install"></A></SPAN><SPAN class="c1">install</SPAN> [<A class=
    "c11" href=
    "plplugin.src.html.in#Install_Options">install-options</A>]
    <I>plugin-file1</I> [<I>plugin-file2 ...</I>]&nbsp;<BR>
    <BR>

    <DIV class="c5">
      Installs one or more compiled plugins (<SPAN class=
      "c2">plugin-file</SPAN>) contained in the given class or JAR
      files and prints information about the plugins
      processed.&nbsp; The class files should each contain one
      plugin and be named identically to the Java class with the
      "<SPAN class="c9">.class</SPAN>" extension
      appended.&nbsp;<BR>
      <BR>
      Alternatively, a JAR archive file may be specified for
      plugins which require more than one complied class
      file.&nbsp; This JAR file must contain at least one class
      which matches the same naming conventions as the single
      compiled class file specified for plugins with only a single
      file.&nbsp; It may also contain additional class files used
      by this main plugin class.&nbsp; The JAR file must be named
      identically to the single class file case, except with the
      ".jar" extention instead of ".class".&nbsp;You can also
      install mixtures of class and JAR files in one invocation of
      <SPAN class="c1">plplugin</SPAN>(1).<BR>
      <BR>
      Each of the class file arguments is loaded using a Java class
      path containing only the current directory.&nbsp; This means
      that <SPAN class="c1">plplugin</SPAN>(1) should be run from
      the top Java build directory so that the directory portion of
      the class file path matches the package name.&nbsp;<BR>
      <BR>
      If there exists a previously installed plugin with the same
      name and version as one of the given plugins, the existing
      plugin must be under development or an error will be
      generated (see <A href="#Important_Caveats"><SPAN class=
      "c1">Important Caveats</SPAN></A>).&nbsp; While under
      development, if the form of the installed plugin is changed
      from a single class file to a JAR (or visa versa) the
      previous installed plugin file will be removed when the
      plugin is installed.&nbsp; In other words, there will never
      be both a class and JAR file form installed for a given
      plugin version.<BR>
      <BR>
      <SPAN class="c4">This command requires Developer privileges
      (see <A class="c3" href=
      "../javadoc/us/temerity/pipeline/Privileges.html#isDeveloper">
      Privileges</A>).<BR></SPAN>
    </DIV><BR>
    <SPAN class="c1"><A name="Install_Options" id=
    "Install_Options"></A>Install Options</SPAN><BR>
    <BR>

    <DIV class="c5">
      A plugin is identified to Pipeline by the combination its
      Name, VersionID and Vendor.&nbsp; This information is
      specified by the plugin as part of its constructor and
      accessors are provided for this information in
      BasePlugin.&nbsp; When you attempt to install a plugin, there
      is no requirement that the name of the plugin Java class and
      package have any relationship with the Name, Version and
      Vendor of the plugin.&nbsp;&nbsp;<BR>
      <BR>
      One consequence of this is that it is possible to
      accidentally copy the source code of an existing class as a
      starting point for a new class and forget to change the
      original Name, Version and Vendor.&nbsp; If you install this
      new plugin and the original plugin is still under
      development, the new plugin will overwrite the existing one
      instead of adding a new kind of plugin to Pipeline!&nbsp;<BR>
      <BR>
      In order to reduce the possibility of mistakes of this kind,
      additional checks have been added to the plugin installation
      procedure which should catch most of these type of
      accidents.&nbsp; The following options allow expert users to
      selectively disable these additional checks in cases where it
      is required.&nbsp;&nbsp;<BR>
      <BR>
      <SPAN class="c1"><A name=
      "--external"></A>--external<BR></SPAN>

      <DIV class="c5">
        <BR>
        A default <A href=
        "plconfig.html#--local-vendor"><SPAN class="c1">Local
        Vendor</SPAN></A> has been added to the site profile
        created with <A href="plconfig.html"><SPAN class=
        "c1">plconfig</SPAN></A>(1) for a studio.&nbsp; If you
        attempt to install a plugin who's Vendor does not match
        this default Local Vendor, an error will be generated and
        the plugin will not be installed.&nbsp; If you wish to
        install plugins created by another Vendor, this option will
        disable the requirement that it match the Local Vendor.
      </DIV><BR>
      <SPAN class="c1"><A name="--rename"></A>--rename</SPAN><BR>
      <BR>

      <DIV class="c5">
        When installing a plugin which will replace a currently
        installed and under development plugin, the Java class and
        package names of the existing and new plugin will be
        compared.&nbsp; If they are not identical, the new plugin
        will not be installed and an error will be generated.&nbsp;
        This check is to prevent the accidental overwriting of an
        entirely different plugin due to the new plugin specifying
        incorrect Name, VersionID and Vendor information.&nbsp;
        However, it is occasonally necessary to be able to override
        this check and this option provides the means to do so.
      </DIV><BR>
      <SPAN class="c1"><A name="--dry-run"></A>--dry-run</SPAN><BR>
      <BR>

      <DIV class="c5">
        Perform all required checks to validate that an install of
        a plugin but do not actually perform the
        installation.&nbsp; This option allows for plugin developer
        to check whether a plugin would be installed successfully
        without installing it.
      </DIV>
    </DIV>
  </DIV><BR>
  <BR>

  <DIV class="c5">
    <SPAN class="c1">Examples</SPAN><BR>
    <BR>

    <DIV class="c5">
      The command line to install the <A href="#emacs"><SPAN class=
      "c1">EmacsEditor</SPAN></A> plugin mentioned above would be
      be:<BR>
      <BR>

      <DIV class="c5">
        <CODE>&gt; plplugin install
        us/temerity/pipeline/plugin/v1_0_0/EmacsEditor.class<BR></CODE>
      </DIV><BR>
      A JAR file example, might look like this:

      <DIV class="c5">
        <PRE>
&gt; jar -cvf com/studioX/plugin/v2_1_0/ExampleAction.jar \<BR>  com/studioX/plugin/v2_1_0/ExampleAction.class \<BR>  com/studioX/plugin/v2_1_0/ExampleExtras.class <BR><BR>&gt; plplugin install com/studioX/plugin/v2_1_0/ExampleAction.jar
</PRE>
      </DIV>
    </DIV>
  </DIV>

  <H3><A name="Extraction_Command" id=
  "Extraction_Command"></A>Extraction Command</H3>

  <DIV class="c5">
    <A name="Extract" id="Extract"></A><SPAN class=
    "c1">extract</SPAN> <A href=
    "#Plugin_Filtering_Options"></A>[<A href=
    "#Extract"><SPAN class="c2">extract-options</SPAN></A>]
    [<SPAN class="c2">extract-path ...</SPAN>]<BR>
    <BR>
    Extracts all or a subset of resources associated with a single
    plugin.&nbsp; The <SPAN class="c2">extract-path</SPAN> can be
    an exact name of a resource or a path that contains multiple
    resources.&nbsp; By specifying a combination of --type,
    --vendor, --name, and --version the result should be a single
    plugin.<BR>
    <BR>
    <A name="Extract_Options" id="Extract_Options"></A><SPAN class=
    "c1">Extract Options<BR>
    <BR></SPAN>

    <DIV class="c5">
      <SPAN class="c1"><A name="Extract--type" id=
      "Extract--type"></A>--type</SPAN>=<SPAN class=
      "c2"><SPAN class="c2">plugin-type</SPAN><BR>
      <BR></SPAN>

      <DIV class="c5">
        See the plugin-filtering-options for <A href=
        "#Plugin_Filtering_Options--type"><SPAN class=
        "c2">--type</SPAN></A>.
      </DIV><BR>

      <SPAN class="c1"><A name=
      "Extract--vendor" id=
      "Extract--vendor"></A>--vendor</SPAN>=<SPAN class=
      "c2"><SPAN class="c2">plugin-vendor</SPAN></SPAN><BR><BR>

      <DIV class="c5">
        See the plugin-filtering-options for <A href=
        "#Plugin_Filtering_Options--vendor"><SPAN class=
        "c2">--vendor</SPAN></A>.
      </DIV><BR>

      <SPAN class="c1"><A name=
      "Extract--name" id=
      "Extract--name"></A>--name</SPAN>=<SPAN class=
      "c2"><SPAN class="c2">plugin-name</SPAN></SPAN><BR>
      <BR>

      <DIV class="c5">
        See the plugin-filtering-options for <A href=
        "#Plugin_Filtering_Options--name"><SPAN class=
        "c2">--name</SPAN></A>.
      </DIV>
      <BR>

      <A name="Extract--version"
      id="Extract--version"></A><SPAN class=
      "c1">--version</SPAN>=<SPAN class="c2"><SPAN class=
      "c2">plugin-version</SPAN>
      </SPAN><BR><BR>

      <DIV class="c5">
        See the plugin-filtering-options for <A href=
        "#Plugin_Filtering_Options--version"><SPAN class=
        "c2">--version</SPAN></A>.
      </DIV><BR>

      <SPAN class="c1"><A name=
      "Extract--dir" id=
      "Extract--dir"></A>--dir</SPAN>=<SPAN class="c2">directory-name<BR>
      </SPAN>

      <DIV class="c5">
        <BR>
        The directory where to write the resource plugins.&nbsp; If
        this options is not specified the current directory is
        used.<BR>
      </DIV>
    </DIV>

    </DIV>

    <H3><A name="See_Also" id="See_Also"></A>See Also</H3>

    <DIV class="c5">
      <SPAN class="c1">Documentation</SPAN><BR>
    </DIV>

    <DIV class="c8">
      <A href="../javadoc/index.html"><SPAN class="c1">Pipeline
      Java API</SPAN></A><BR>
      <BR>
    </DIV>

    <DIV class="c5">
      <SPAN class="c1">Pipeline Programs</SPAN><BR>

      <DIV class="c5">
        <A href="plui.html"><SPAN class="c1">plui</SPAN></A>(1),
        <A href="plremote.html"><SPAN class=
        "c1">plremote</SPAN></A>(1), plversion(1), <A href=
        "plscript.html"><SPAN class="c1">plscript</SPAN></A>(1),
        <A href="plpython.html"><SPAN class=
        "c1">plpython</SPAN></A>(1), <A href=
        "plplugin.html"></A><A href="plplugin.html"><SPAN class=
        "c1">plplugin</SPAN></A>(1), <A href=
        "plbuilder.html"><SPAN class=
        "c1">plbuilder</SPAN></A>(1)<BR>
        <A href="plmaster.html"><SPAN class=
        "c1">plmaster</SPAN></A>(1), <A href=
        "pljobmgr.html"></A><A href="plmaster.html"></A> <A href=
        "plfilemgr.html"></A><A href="plqueuemgr.html"><SPAN class=
        "c1">plqueuemgr</SPAN></A>(1), <A href=
        "plpluginmgr.html"><SPAN class=
        "c1">plpluginmgr</SPAN></A>(1), <A href=
        "plfilemgr.html"></A><A href="plfilemgr.html"><SPAN class=
        "c1">plfilemgr</SPAN></A>(1), <A href=
        "pljobmgr.html"><SPAN class="c1">pljobmgr</SPAN></A>(1)<BR>
        <A href="pls.html"><SPAN class="c1">pls</SPAN></A>(1),
        <A href="plbrowse.html"><SPAN class=
        "c1">plbrowse</SPAN></A>(1), <A href=
        "realpath.html"><SPAN class="c1">realpath</SPAN></A>(1)<BR>
        <A href=
        "file://usr/share/doc/plconfig-@PLCONFIG_VERSION@/plconfig.html">
        <SPAN class="c1">plconfig</SPAN></A>(1)
      </DIV>
    </DIV>

    <H3><A name="Files" id="Files"></A>Files</H3>

    <DIV class="c12">
      <A name="plugins_dir" id="plugins_dir"></A><A href=
      "../../../plugins">@ROOT_INST_DIR@/plugins</A><BR>
    </DIV>

    <DIV class="c5">
      <BR>

      <DIV class="c5">
        The directory containing the installed plugin class and JAR
        files.<BR>
      </DIV>
    </DIV>

    <H3><A name="Author" id="Author"></A>Author</H3>

    <DIV class="c5">
      Originally created by <SPAN class="c1">Jim Callahan</SPAN>,
      but extended and now maintained by <SPAN class="c1">John
      Lee</SPAN> of <A href="http://temerity.us/"><SPAN class=
      "c1">Temerity Software, Inc</SPAN></A>.
    </DIV>

    <H3><A name="Copyright" id="Copyright"></A>Copyright</H3>

    <DIV class="c5">
      @COPYRIGHT@<BR>
    </DIV>

    <H3><A name="License_Agreement" id=
    "License_Agreement"></A>License Agreement</H3>

    <DIV class="c5">
      @LICENSE@
    </DIV>
  </DIV>
</BODY>
</HTML>
