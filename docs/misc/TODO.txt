----------------------------------------------------------------------------------------------

ACTIONS:

+ Port the old Pipeline actions to work with the new Pipeline.

+ Get Jesse's fix to the old MayaCollate.

+ Write Action classes for the remaining common CG tasks...  Finish Output OP support 
  in Houdini.  Add all supported Maya renderer related actions: MentalRay and Maya Renderers.
  Maya simulation actions: particle systems, dynamics, cloth, fluid dynamics.  Generic MEL
  action.  Add 3Delight rendering.  XSI supprt?  Simple compositing actions?

+ Add thumbnail generation method. 

+ Add output parsing method which can trigger a kill of the job and updates a completion 
  percentage field.


OPERATIONS: 

- Implement Import/Export ops in NodeViewer

- Per-file Queue/Kill/Remove

- The node status update immediately following a RemoveFiles operation frequently fails to   
  catch the removed files.  Updates after do work properly.

- Add "Delete Job Group" and "Delete Finished Job Groups" operations.  QueueJobGroups with 
  unfinished jobs cannot be deleted until the jobs are completed (Finished, Killed, Aborted).

- Should there be an automatic delete of finished QueueJobGroups older than a certain number
  of days?

- Add garbage collection of QueueJobs not referenced by any QueueJobGroup or job belonging 
  to a group.  This should be run on QueueMgr startup and incrementally every X number of 
  dispatcher cycles.

  A mark and sweep approach should be used in which all jobs are added to a dead list.
  Then the jobs belonging to a QueueGroup and their source jobs are recursively traversed and
  removed from the dead list.  All jobs remaining on the dead list are then remove from the 
  jobs/info tables and the file associated files deleted.  If the JobMgr which ran the job
  is running, it should be told to delete all files associated with the deleted job as well.

  Decide how to handle the files created by the JobMgr for a job which are not deleted 
  because the JobMgr was not running when the job was deleted.  Maybe the QueueMgr give
  the JobMgr a list of job IDs which are not still valid on startup and have the JobMgr
  remove any files associated with jobs not on this list during initialization.




USER INTERFACE: 

- Thumbnail display options in the NodeViewer

- NodeLinks Panel?

- JobDetails Panels

- Task/Scheduling Panels

- Improved UI for panel save/restore.  Its sort of clunky but works currently...

- NodeViewer contents are not intialized to the selected nodes in the linked NodeBrowser 
  when the panel type is changed to NodeViewer from some other type of panel.

- NodeBrowser contents are not intialized to the selected nodes in the linked NodeViewer 
  when the panel type is changed to NodeBrowser from some other type of panel.

- Check for duplicate hotkeys in the same group when changing a hot key.

- When layouts are restored, there can be conflicts between multiple update tasks and 
  problems of some components not being instatiated yet at the point of update.  A more
  methodical system needs to replace the current ad hoc system.

- Sorting the JobBrowser clears the current selection - it should be preserved.



RPMS:

- Find some way to make the --root-dir the parent of the actual install directory so 
  that the build process can generate the pipeline-$CUSTOMER-$VERSION-$STAMP subdirectory
  which is used for the release being built.

  The problem is that the (config) directory containing the files generated by plconfig(1)
  needs to be located somewhere Pipeline knows about and not under the generate release
  subdirectory since the user cannot know this location at the time of running plconfig(1).





BACKEND: 

- Automated cleanup of Job Server sample files older than a given interval.

- Task/Scheduling System

- Automated Backup of Node/Queue database and production working areas.

- Node and File Online/Offline System


IMPORTANT UNIMPLEMENTED JOB RELATED ISSUES:

+ The Edit/Edit With operations should generate a warning when a job is Queue/Running for
  the target file(s).

+ When critical modifications are performed on a node, any running jobs associated with the
  node should immediately be killed/aborted.  Ideally, a dialog should give the user the 
  choice of killing the jobs or cancelling the operation.

  Critical modifications can come from Link/Unlink, Add/Remove Secondary, Check-Out, Rename, 
  as well as from the modifyProperties() method.

+ The Renumber operation should kill any running jobs which generate frames which will be 
  obsolete in the new frame range.  If the Execution Method is Serial, all running jobs should
  be killed.

+ The Release/RemoveFiles operations should also kill any running jobs associated with 
  the node.


----------------------------------------------------------------------------------------------

DOCUMENTATION: 

+ Write Pipeline User Manual

+ Write Pipeline Whitepaper for manager types.

+ Write Pipeline Glossy Brochure suitable for printing and web page.



WEB PAGE:

+ Company Info

  - Bio of Jim Callahan

  - Mission Statement / Philosophy


+ Pipeline 

  - Intro Page

  - Walkthrough of Features (with screen shots)

  - News: press releases, articles, announcements

  - Customer Testimonials
  

  - Documentation

  - Tutorials

  - Forums

  - Bug Database



----------------------------------------------------------------------------------------------

UPCOMING CONFERENCES: 

- E3

- NAB 

- Game Developers Conference

- SIGGRAPH 2005



----------------------------------------------------------------------------------------------

CONTACTS: 

Massive Software:
  - Stephen Regelous

Charlex: 
  - Bryan Godwin (techy animator)
  - Steve Mann

Weta:
  - Matt Aitken (Digital FX Supervisor)

Box Rocket: 
  - Bay Raitt

Dreamworks: 
  - Nathan Wilson

???
  - Josh Richards 

