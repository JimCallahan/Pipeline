
DISPATCHER: 
   
  + Datastructures: 

     - WaitQueue (ConcurrentLinkedQueue<QueueJob>): 
         The list of jobs which are waiting on upstream jobs to exit.

     - KillQueue (ConcurrentLinkedQueue<Long>): 
         The list of job IDs to kill as soon as possible.


     - ReadyQueue (LinkedList<QueueJob>): 
         The list of jobs ready to be run in order of priority.

     - RunTable (TreeMap<Long,QueueJob>): 
         The table of jobs currently running indexed by job ID.

     - ExitTable (TreeMap<Long,QueueJob>): 
         The table of jobs which have exited (sucessfully or not), have been killed or 
	 have been aborted indexed by job ID.


     - JobsTable (TreeMap<Long,QueueJob>):
         The table of all existing QueueJobs indexed by job ID.  QueueJobs are read-only
         and their values are never changed once they are added to this table.  QueueJobs
         may be removed from the table by a ClearRequest.

     - StateTable (TreeMap<Long,QueueState>):
         The table of current QueueStates for all existing QueueJobs indexed by job ID.
  
     - NodeJobsTable (TreeMap<NodeID,long[]>):
         The table of job IDs which will regenerate each primary/secondary file associated
         with a working version of a node.  If the NodeID is missing from the table, then
         no jobs exist for that working version.  If one of the individual job ID entries
         for a file are (null), then no jobs exist which regenerate that particular file.
         Note that it is possible for several file to be generated by the same QueueJob,
         therefore job IDs may be repeated in the array for one working version.

     - GroupsTable (TreeMap<Long,QueueGroup>): 
         The table of QueueGroups indexed by group ID.  QueueGroups contain information 
         about the submitter of a related set of QueueJobs and a convienent handle for 
         operation on all of these QueueJobs.


     - HostTable (TreeMap<String,QueueHost>): 
         The table of hosts which are capable of running jobs indexed by fully resolved
	 hostname.




  + Threads:

    - Server Thread(s): 
        Created to handle an incoming network connection from plmaster(1).

        + QueueRequest: 
            A request from containing a QueueGroup with its associated tree of QueueJobs 
	    to enqueue.  

	    Locks both StateTable and NodeJobsTable.  If all of the existing per-file 
            jobs IDs in NodeJobsTable are either (null) or correspond to QueueJobs which
            have a QueueState of Finished or Aborted in the StateTable then all jobs 
            are submitted.  Otherwise all jobs are rejected and no change is made to 
            any datastructure.  On success, the QueueStates for all submitted QueueJobs are 
            set to Queued in the StateTable and the per-file job IDs are replaced with the 
            submitted job IDs.  The StateTable and NodeJobsTable are then unlocked.

            If the submission was successful:

              - The QueueGroup is added to the GroupsTable protected by a lock.

              - All QueueJobs are added to the JobsTable protected by a lock.

	      - All QueueJobs from the request are added to the end of the WaitQueue.  
	        No locking of WaitQueue is required.  


        + KillRequest: 
            A request to kill (or abort) QueueJobs which are waiting, ready or running 
            which match the given set of job IDs.  All jobs downstream from the jobs with 
            the given IDs will also be killed (or aborted) by the Dispatcher Thread.  The 
	    request simply adds the job IDs to end of the KillQueue.  No locking of KillQueue
            is required.

        + 
        


        + AddHostRequest: 
            A request to add a new host to the table of machines capable of running jobs.
            Locks the HostTable.

        + RemoveHostRequest: 
            A request to remove an existing host from the table of machines capable of 
            running jobs. Locks the HostTable.
  
        + ModifyHostRequest: 
            A request to change the properties of an existing host such as: SelectionKeys, 
            enabled/disabled state, reserved user name, etc.. Locks the HostTable.
            
 

    - Dispatcher Thread: 
        
        + Process WaitQueue: 
            Moves any job which 
